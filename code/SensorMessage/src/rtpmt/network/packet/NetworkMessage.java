// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: NetworkMessage.proto

package rtpmt.network.packet;

public final class NetworkMessage {
  private NetworkMessage() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface PackageInformationOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string sensorId = 1;
    /**
     * <code>required string sensorId = 1;</code>
     */
    boolean hasSensorId();
    /**
     * <code>required string sensorId = 1;</code>
     */
    java.lang.String getSensorId();
    /**
     * <code>required string sensorId = 1;</code>
     */
    com.google.protobuf.ByteString
        getSensorIdBytes();

    // required string packageId = 2;
    /**
     * <code>required string packageId = 2;</code>
     */
    boolean hasPackageId();
    /**
     * <code>required string packageId = 2;</code>
     */
    java.lang.String getPackageId();
    /**
     * <code>required string packageId = 2;</code>
     */
    com.google.protobuf.ByteString
        getPackageIdBytes();

    // optional string truckId = 3;
    /**
     * <code>optional string truckId = 3;</code>
     */
    boolean hasTruckId();
    /**
     * <code>optional string truckId = 3;</code>
     */
    java.lang.String getTruckId();
    /**
     * <code>optional string truckId = 3;</code>
     */
    com.google.protobuf.ByteString
        getTruckIdBytes();

    // optional .rtpmt.network.packet.PackageInformation.LocationInformation location = 4;
    /**
     * <code>optional .rtpmt.network.packet.PackageInformation.LocationInformation location = 4;</code>
     */
    boolean hasLocation();
    /**
     * <code>optional .rtpmt.network.packet.PackageInformation.LocationInformation location = 4;</code>
     */
        rtpmt.network.packet.NetworkMessage.PackageInformation.LocationInformation getLocation();
    /**
     * <code>optional .rtpmt.network.packet.PackageInformation.LocationInformation location = 4;</code>
     */
        rtpmt.network.packet.NetworkMessage.PackageInformation.LocationInformationOrBuilder getLocationOrBuilder();

    // repeated .rtpmt.network.packet.PackageInformation.Sensor sensors = 5;
    /**
     * <code>repeated .rtpmt.network.packet.PackageInformation.Sensor sensors = 5;</code>
     */
    java.util.List<rtpmt.network.packet.NetworkMessage.PackageInformation.Sensor> 
        getSensorsList();
    /**
     * <code>repeated .rtpmt.network.packet.PackageInformation.Sensor sensors = 5;</code>
     */
        rtpmt.network.packet.NetworkMessage.PackageInformation.Sensor getSensors(int index);
    /**
     * <code>repeated .rtpmt.network.packet.PackageInformation.Sensor sensors = 5;</code>
     */
    int getSensorsCount();
    /**
     * <code>repeated .rtpmt.network.packet.PackageInformation.Sensor sensors = 5;</code>
     */
    java.util.List<? extends rtpmt.network.packet.NetworkMessage.PackageInformation.SensorOrBuilder> 
        getSensorsOrBuilderList();
    /**
     * <code>repeated .rtpmt.network.packet.PackageInformation.Sensor sensors = 5;</code>
     */
        rtpmt.network.packet.NetworkMessage.PackageInformation.SensorOrBuilder getSensorsOrBuilder(
        int index);

    // repeated .rtpmt.network.packet.PackageInformation.Config configs = 6;
    /**
     * <code>repeated .rtpmt.network.packet.PackageInformation.Config configs = 6;</code>
     */
    java.util.List<rtpmt.network.packet.NetworkMessage.PackageInformation.Config> 
        getConfigsList();
    /**
     * <code>repeated .rtpmt.network.packet.PackageInformation.Config configs = 6;</code>
     */
        rtpmt.network.packet.NetworkMessage.PackageInformation.Config getConfigs(int index);
    /**
     * <code>repeated .rtpmt.network.packet.PackageInformation.Config configs = 6;</code>
     */
    int getConfigsCount();
    /**
     * <code>repeated .rtpmt.network.packet.PackageInformation.Config configs = 6;</code>
     */
    java.util.List<? extends rtpmt.network.packet.NetworkMessage.PackageInformation.ConfigOrBuilder> 
        getConfigsOrBuilderList();
    /**
     * <code>repeated .rtpmt.network.packet.PackageInformation.Config configs = 6;</code>
     */
        rtpmt.network.packet.NetworkMessage.PackageInformation.ConfigOrBuilder getConfigsOrBuilder(
        int index);

    // required uint64 timeStamp = 7;
    /**
     * <code>required uint64 timeStamp = 7;</code>
     */
    boolean hasTimeStamp();
    /**
     * <code>required uint64 timeStamp = 7;</code>
     */
    long getTimeStamp();

    // required .rtpmt.network.packet.PackageInformation.MessageType messageType = 8;
    /**
     * <code>required .rtpmt.network.packet.PackageInformation.MessageType messageType = 8;</code>
     */
    boolean hasMessageType();
    /**
     * <code>required .rtpmt.network.packet.PackageInformation.MessageType messageType = 8;</code>
     */
        rtpmt.network.packet.NetworkMessage.PackageInformation.MessageType getMessageType();

    // required bool isRealTime = 9;
    /**
     * <code>required bool isRealTime = 9;</code>
     */
    boolean hasIsRealTime();
    /**
     * <code>required bool isRealTime = 9;</code>
     */
    boolean getIsRealTime();

    // optional string comments = 10;
    /**
     * <code>optional string comments = 10;</code>
     */
    boolean hasComments();
    /**
     * <code>optional string comments = 10;</code>
     */
    java.lang.String getComments();
    /**
     * <code>optional string comments = 10;</code>
     */
    com.google.protobuf.ByteString
        getCommentsBytes();

    // optional bool isAboveThreshold = 11;
    /**
     * <code>optional bool isAboveThreshold = 11;</code>
     */
    boolean hasIsAboveThreshold();
    /**
     * <code>optional bool isAboveThreshold = 11;</code>
     */
    boolean getIsAboveThreshold();
  }
  /**
   * Protobuf type {@code rtpmt.network.packet.PackageInformation}
   */
  public static final class PackageInformation extends
      com.google.protobuf.GeneratedMessage
      implements PackageInformationOrBuilder {
    // Use PackageInformation.newBuilder() to construct.
    private PackageInformation(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PackageInformation(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PackageInformation defaultInstance;
    public static PackageInformation getDefaultInstance() {
      return defaultInstance;
    }

    public PackageInformation getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PackageInformation(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              sensorId_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              packageId_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              truckId_ = input.readBytes();
              break;
            }
            case 34: {
                        rtpmt.network.packet.NetworkMessage.PackageInformation.LocationInformation.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = location_.toBuilder();
              }
              location_ = input.readMessage(rtpmt.network.packet.NetworkMessage.PackageInformation.LocationInformation.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(location_);
                location_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                sensors_ = new java.util.ArrayList<rtpmt.network.packet.NetworkMessage.PackageInformation.Sensor>();
                mutable_bitField0_ |= 0x00000010;
              }
              sensors_.add(input.readMessage(rtpmt.network.packet.NetworkMessage.PackageInformation.Sensor.PARSER, extensionRegistry));
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                configs_ = new java.util.ArrayList<rtpmt.network.packet.NetworkMessage.PackageInformation.Config>();
                mutable_bitField0_ |= 0x00000020;
              }
              configs_.add(input.readMessage(rtpmt.network.packet.NetworkMessage.PackageInformation.Config.PARSER, extensionRegistry));
              break;
            }
            case 56: {
              bitField0_ |= 0x00000010;
              timeStamp_ = input.readUInt64();
              break;
            }
            case 64: {
              int rawValue = input.readEnum();
                        rtpmt.network.packet.NetworkMessage.PackageInformation.MessageType value = rtpmt.network.packet.NetworkMessage.PackageInformation.MessageType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(8, rawValue);
              } else {
                bitField0_ |= 0x00000020;
                messageType_ = value;
              }
              break;
            }
            case 72: {
              bitField0_ |= 0x00000040;
              isRealTime_ = input.readBool();
              break;
            }
            case 82: {
              bitField0_ |= 0x00000080;
              comments_ = input.readBytes();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000100;
              isAboveThreshold_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          sensors_ = java.util.Collections.unmodifiableList(sensors_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          configs_ = java.util.Collections.unmodifiableList(configs_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return rtpmt.network.packet.NetworkMessage.internal_static_rtpmt_network_packet_PackageInformation_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return rtpmt.network.packet.NetworkMessage.internal_static_rtpmt_network_packet_PackageInformation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              rtpmt.network.packet.NetworkMessage.PackageInformation.class, rtpmt.network.packet.NetworkMessage.PackageInformation.Builder.class);
    }

    public static com.google.protobuf.Parser<PackageInformation> PARSER =
        new com.google.protobuf.AbstractParser<PackageInformation>() {
      public PackageInformation parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PackageInformation(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PackageInformation> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code rtpmt.network.packet.PackageInformation.SensorType}
     */
    public enum SensorType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>TEMPERATURE = 0;</code>
       */
      TEMPERATURE(0, 0),
      /**
       * <code>HUMIDITY = 1;</code>
       */
      HUMIDITY(1, 1),
      /**
       * <code>VIBRATIONX = 2;</code>
       */
      VIBRATIONX(2, 2),
      /**
       * <code>VIBRATIONY = 3;</code>
       */
      VIBRATIONY(3, 3),
      /**
       * <code>VIBRATIONZ = 4;</code>
       */
      VIBRATIONZ(4, 4),
      /**
       * <code>SHOCKX = 5;</code>
       */
      SHOCKX(5, 5),
      /**
       * <code>SHOCKY = 6;</code>
       */
      SHOCKY(6, 6),
      /**
       * <code>SHOCKZ = 7;</code>
       */
      SHOCKZ(7, 7),
      ;

      /**
       * <code>TEMPERATURE = 0;</code>
       */
      public static final int TEMPERATURE_VALUE = 0;
      /**
       * <code>HUMIDITY = 1;</code>
       */
      public static final int HUMIDITY_VALUE = 1;
      /**
       * <code>VIBRATIONX = 2;</code>
       */
      public static final int VIBRATIONX_VALUE = 2;
      /**
       * <code>VIBRATIONY = 3;</code>
       */
      public static final int VIBRATIONY_VALUE = 3;
      /**
       * <code>VIBRATIONZ = 4;</code>
       */
      public static final int VIBRATIONZ_VALUE = 4;
      /**
       * <code>SHOCKX = 5;</code>
       */
      public static final int SHOCKX_VALUE = 5;
      /**
       * <code>SHOCKY = 6;</code>
       */
      public static final int SHOCKY_VALUE = 6;
      /**
       * <code>SHOCKZ = 7;</code>
       */
      public static final int SHOCKZ_VALUE = 7;


      public final int getNumber() { return value; }

      public static SensorType valueOf(int value) {
        switch (value) {
          case 0: return TEMPERATURE;
          case 1: return HUMIDITY;
          case 2: return VIBRATIONX;
          case 3: return VIBRATIONY;
          case 4: return VIBRATIONZ;
          case 5: return SHOCKX;
          case 6: return SHOCKY;
          case 7: return SHOCKZ;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<SensorType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<SensorType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<SensorType>() {
              public SensorType findValueByNumber(int number) {
                return SensorType.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return  rtpmt.network.packet.NetworkMessage.PackageInformation.getDescriptor().getEnumTypes().get(0);
      }

      private static final SensorType[] VALUES = values();

      public static SensorType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private SensorType(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:rtpmt.network.packet.PackageInformation.SensorType)
    }

    /**
     * Protobuf enum {@code rtpmt.network.packet.PackageInformation.MessageType}
     */
    public enum MessageType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>CONFIG = 0;</code>
       */
      CONFIG(0, 0),
      /**
       * <code>SENSOR_INFO = 1;</code>
       */
      SENSOR_INFO(1, 1),
      ;

      /**
       * <code>CONFIG = 0;</code>
       */
      public static final int CONFIG_VALUE = 0;
      /**
       * <code>SENSOR_INFO = 1;</code>
       */
      public static final int SENSOR_INFO_VALUE = 1;


      public final int getNumber() { return value; }

      public static MessageType valueOf(int value) {
        switch (value) {
          case 0: return CONFIG;
          case 1: return SENSOR_INFO;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<MessageType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<MessageType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<MessageType>() {
              public MessageType findValueByNumber(int number) {
                return MessageType.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return  rtpmt.network.packet.NetworkMessage.PackageInformation.getDescriptor().getEnumTypes().get(1);
      }

      private static final MessageType[] VALUES = values();

      public static MessageType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private MessageType(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:rtpmt.network.packet.PackageInformation.MessageType)
    }

    public interface LocationInformationOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // required double latitude = 1;
      /**
       * <code>required double latitude = 1;</code>
       */
      boolean hasLatitude();
      /**
       * <code>required double latitude = 1;</code>
       */
      double getLatitude();

      // required double longitude = 2;
      /**
       * <code>required double longitude = 2;</code>
       */
      boolean hasLongitude();
      /**
       * <code>required double longitude = 2;</code>
       */
      double getLongitude();
    }
    /**
     * Protobuf type {@code rtpmt.network.packet.PackageInformation.LocationInformation}
     */
    public static final class LocationInformation extends
        com.google.protobuf.GeneratedMessage
        implements LocationInformationOrBuilder {
      // Use LocationInformation.newBuilder() to construct.
      private LocationInformation(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private LocationInformation(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final LocationInformation defaultInstance;
      public static LocationInformation getDefaultInstance() {
        return defaultInstance;
      }

      public LocationInformation getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private LocationInformation(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 9: {
                bitField0_ |= 0x00000001;
                latitude_ = input.readDouble();
                break;
              }
              case 17: {
                bitField0_ |= 0x00000002;
                longitude_ = input.readDouble();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return  rtpmt.network.packet.NetworkMessage.internal_static_rtpmt_network_packet_PackageInformation_LocationInformation_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return  rtpmt.network.packet.NetworkMessage.internal_static_rtpmt_network_packet_PackageInformation_LocationInformation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                rtpmt.network.packet.NetworkMessage.PackageInformation.LocationInformation.class, rtpmt.network.packet.NetworkMessage.PackageInformation.LocationInformation.Builder.class);
      }

      public static com.google.protobuf.Parser<LocationInformation> PARSER =
          new com.google.protobuf.AbstractParser<LocationInformation>() {
        public LocationInformation parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new LocationInformation(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<LocationInformation> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // required double latitude = 1;
      public static final int LATITUDE_FIELD_NUMBER = 1;
      private double latitude_;
      /**
       * <code>required double latitude = 1;</code>
       */
      public boolean hasLatitude() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required double latitude = 1;</code>
       */
      public double getLatitude() {
        return latitude_;
      }

      // required double longitude = 2;
      public static final int LONGITUDE_FIELD_NUMBER = 2;
      private double longitude_;
      /**
       * <code>required double longitude = 2;</code>
       */
      public boolean hasLongitude() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required double longitude = 2;</code>
       */
      public double getLongitude() {
        return longitude_;
      }

      private void initFields() {
        latitude_ = 0D;
        longitude_ = 0D;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasLatitude()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasLongitude()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeDouble(1, latitude_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeDouble(2, longitude_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(1, latitude_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(2, longitude_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static rtpmt.network.packet.NetworkMessage.PackageInformation.LocationInformation parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static rtpmt.network.packet.NetworkMessage.PackageInformation.LocationInformation parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static rtpmt.network.packet.NetworkMessage.PackageInformation.LocationInformation parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static rtpmt.network.packet.NetworkMessage.PackageInformation.LocationInformation parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static rtpmt.network.packet.NetworkMessage.PackageInformation.LocationInformation parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static rtpmt.network.packet.NetworkMessage.PackageInformation.LocationInformation parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static rtpmt.network.packet.NetworkMessage.PackageInformation.LocationInformation parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static rtpmt.network.packet.NetworkMessage.PackageInformation.LocationInformation parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static rtpmt.network.packet.NetworkMessage.PackageInformation.LocationInformation parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static rtpmt.network.packet.NetworkMessage.PackageInformation.LocationInformation parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(rtpmt.network.packet.NetworkMessage.PackageInformation.LocationInformation prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code rtpmt.network.packet.PackageInformation.LocationInformation}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements rtpmt.network.packet.NetworkMessage.PackageInformation.LocationInformationOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return    rtpmt.network.packet.NetworkMessage.internal_static_rtpmt_network_packet_PackageInformation_LocationInformation_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return    rtpmt.network.packet.NetworkMessage.internal_static_rtpmt_network_packet_PackageInformation_LocationInformation_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                    rtpmt.network.packet.NetworkMessage.PackageInformation.LocationInformation.class, rtpmt.network.packet.NetworkMessage.PackageInformation.LocationInformation.Builder.class);
        }

        // Construct using rtpmt.network.packet.NetworkMessage.PackageInformation.LocationInformation.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          latitude_ = 0D;
          bitField0_ = (bitField0_ & ~0x00000001);
          longitude_ = 0D;
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return    rtpmt.network.packet.NetworkMessage.internal_static_rtpmt_network_packet_PackageInformation_LocationInformation_descriptor;
        }

        public  rtpmt.network.packet.NetworkMessage.PackageInformation.LocationInformation getDefaultInstanceForType() {
          return    rtpmt.network.packet.NetworkMessage.PackageInformation.LocationInformation.getDefaultInstance();
        }

        public  rtpmt.network.packet.NetworkMessage.PackageInformation.LocationInformation build() {
                    rtpmt.network.packet.NetworkMessage.PackageInformation.LocationInformation result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public  rtpmt.network.packet.NetworkMessage.PackageInformation.LocationInformation buildPartial() {
                    rtpmt.network.packet.NetworkMessage.PackageInformation.LocationInformation result = new rtpmt.network.packet.NetworkMessage.PackageInformation.LocationInformation(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.latitude_ = latitude_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.longitude_ = longitude_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof rtpmt.network.packet.NetworkMessage.PackageInformation.LocationInformation) {
            return mergeFrom((rtpmt.network.packet.NetworkMessage.PackageInformation.LocationInformation)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(rtpmt.network.packet.NetworkMessage.PackageInformation.LocationInformation other) {
          if (other == rtpmt.network.packet.NetworkMessage.PackageInformation.LocationInformation.getDefaultInstance()) return this;
          if (other.hasLatitude()) {
            setLatitude(other.getLatitude());
          }
          if (other.hasLongitude()) {
            setLongitude(other.getLongitude());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasLatitude()) {
            
            return false;
          }
          if (!hasLongitude()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
                    rtpmt.network.packet.NetworkMessage.PackageInformation.LocationInformation parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (rtpmt.network.packet.NetworkMessage.PackageInformation.LocationInformation) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // required double latitude = 1;
        private double latitude_ ;
        /**
         * <code>required double latitude = 1;</code>
         */
        public boolean hasLatitude() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required double latitude = 1;</code>
         */
        public double getLatitude() {
          return latitude_;
        }
        /**
         * <code>required double latitude = 1;</code>
         */
        public Builder setLatitude(double value) {
          bitField0_ |= 0x00000001;
          latitude_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required double latitude = 1;</code>
         */
        public Builder clearLatitude() {
          bitField0_ = (bitField0_ & ~0x00000001);
          latitude_ = 0D;
          onChanged();
          return this;
        }

        // required double longitude = 2;
        private double longitude_ ;
        /**
         * <code>required double longitude = 2;</code>
         */
        public boolean hasLongitude() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required double longitude = 2;</code>
         */
        public double getLongitude() {
          return longitude_;
        }
        /**
         * <code>required double longitude = 2;</code>
         */
        public Builder setLongitude(double value) {
          bitField0_ |= 0x00000002;
          longitude_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required double longitude = 2;</code>
         */
        public Builder clearLongitude() {
          bitField0_ = (bitField0_ & ~0x00000002);
          longitude_ = 0D;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:rtpmt.network.packet.PackageInformation.LocationInformation)
      }

      static {
        defaultInstance = new LocationInformation(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:rtpmt.network.packet.PackageInformation.LocationInformation)
    }

    public interface SensorOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // required .rtpmt.network.packet.PackageInformation.SensorType sensorType = 1 [default = TEMPERATURE];
      /**
       * <code>required .rtpmt.network.packet.PackageInformation.SensorType sensorType = 1 [default = TEMPERATURE];</code>
       */
      boolean hasSensorType();
      /**
       * <code>required .rtpmt.network.packet.PackageInformation.SensorType sensorType = 1 [default = TEMPERATURE];</code>
       */
            rtpmt.network.packet.NetworkMessage.PackageInformation.SensorType getSensorType();

      // required string sensorValue = 2;
      /**
       * <code>required string sensorValue = 2;</code>
       */
      boolean hasSensorValue();
      /**
       * <code>required string sensorValue = 2;</code>
       */
      java.lang.String getSensorValue();
      /**
       * <code>required string sensorValue = 2;</code>
       */
      com.google.protobuf.ByteString
          getSensorValueBytes();

      // required string sensorUnit = 3;
      /**
       * <code>required string sensorUnit = 3;</code>
       */
      boolean hasSensorUnit();
      /**
       * <code>required string sensorUnit = 3;</code>
       */
      java.lang.String getSensorUnit();
      /**
       * <code>required string sensorUnit = 3;</code>
       */
      com.google.protobuf.ByteString
          getSensorUnitBytes();
    }
    /**
     * Protobuf type {@code rtpmt.network.packet.PackageInformation.Sensor}
     */
    public static final class Sensor extends
        com.google.protobuf.GeneratedMessage
        implements SensorOrBuilder {
      // Use Sensor.newBuilder() to construct.
      private Sensor(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Sensor(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Sensor defaultInstance;
      public static Sensor getDefaultInstance() {
        return defaultInstance;
      }

      public Sensor getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Sensor(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                            rtpmt.network.packet.NetworkMessage.PackageInformation.SensorType value = rtpmt.network.packet.NetworkMessage.PackageInformation.SensorType.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  sensorType_ = value;
                }
                break;
              }
              case 18: {
                bitField0_ |= 0x00000002;
                sensorValue_ = input.readBytes();
                break;
              }
              case 26: {
                bitField0_ |= 0x00000004;
                sensorUnit_ = input.readBytes();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return  rtpmt.network.packet.NetworkMessage.internal_static_rtpmt_network_packet_PackageInformation_Sensor_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return  rtpmt.network.packet.NetworkMessage.internal_static_rtpmt_network_packet_PackageInformation_Sensor_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                rtpmt.network.packet.NetworkMessage.PackageInformation.Sensor.class, rtpmt.network.packet.NetworkMessage.PackageInformation.Sensor.Builder.class);
      }

      public static com.google.protobuf.Parser<Sensor> PARSER =
          new com.google.protobuf.AbstractParser<Sensor>() {
        public Sensor parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Sensor(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Sensor> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // required .rtpmt.network.packet.PackageInformation.SensorType sensorType = 1 [default = TEMPERATURE];
      public static final int SENSORTYPE_FIELD_NUMBER = 1;
      private rtpmt.network.packet.NetworkMessage.PackageInformation.SensorType sensorType_;
      /**
       * <code>required .rtpmt.network.packet.PackageInformation.SensorType sensorType = 1 [default = TEMPERATURE];</code>
       */
      public boolean hasSensorType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .rtpmt.network.packet.PackageInformation.SensorType sensorType = 1 [default = TEMPERATURE];</code>
       */
      public rtpmt.network.packet.NetworkMessage.PackageInformation.SensorType getSensorType() {
        return sensorType_;
      }

      // required string sensorValue = 2;
      public static final int SENSORVALUE_FIELD_NUMBER = 2;
      private java.lang.Object sensorValue_;
      /**
       * <code>required string sensorValue = 2;</code>
       */
      public boolean hasSensorValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string sensorValue = 2;</code>
       */
      public java.lang.String getSensorValue() {
        java.lang.Object ref = sensorValue_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            sensorValue_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string sensorValue = 2;</code>
       */
      public com.google.protobuf.ByteString
          getSensorValueBytes() {
        java.lang.Object ref = sensorValue_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sensorValue_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // required string sensorUnit = 3;
      public static final int SENSORUNIT_FIELD_NUMBER = 3;
      private java.lang.Object sensorUnit_;
      /**
       * <code>required string sensorUnit = 3;</code>
       */
      public boolean hasSensorUnit() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string sensorUnit = 3;</code>
       */
      public java.lang.String getSensorUnit() {
        java.lang.Object ref = sensorUnit_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            sensorUnit_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string sensorUnit = 3;</code>
       */
      public com.google.protobuf.ByteString
          getSensorUnitBytes() {
        java.lang.Object ref = sensorUnit_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sensorUnit_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private void initFields() {
        sensorType_ = rtpmt.network.packet.NetworkMessage.PackageInformation.SensorType.TEMPERATURE;
        sensorValue_ = "";
        sensorUnit_ = "";
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasSensorType()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasSensorValue()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasSensorUnit()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, sensorType_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, getSensorValueBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeBytes(3, getSensorUnitBytes());
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, sensorType_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, getSensorValueBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(3, getSensorUnitBytes());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static rtpmt.network.packet.NetworkMessage.PackageInformation.Sensor parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static rtpmt.network.packet.NetworkMessage.PackageInformation.Sensor parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static rtpmt.network.packet.NetworkMessage.PackageInformation.Sensor parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static rtpmt.network.packet.NetworkMessage.PackageInformation.Sensor parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static rtpmt.network.packet.NetworkMessage.PackageInformation.Sensor parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static rtpmt.network.packet.NetworkMessage.PackageInformation.Sensor parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static rtpmt.network.packet.NetworkMessage.PackageInformation.Sensor parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static rtpmt.network.packet.NetworkMessage.PackageInformation.Sensor parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static rtpmt.network.packet.NetworkMessage.PackageInformation.Sensor parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static rtpmt.network.packet.NetworkMessage.PackageInformation.Sensor parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(rtpmt.network.packet.NetworkMessage.PackageInformation.Sensor prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code rtpmt.network.packet.PackageInformation.Sensor}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements rtpmt.network.packet.NetworkMessage.PackageInformation.SensorOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return    rtpmt.network.packet.NetworkMessage.internal_static_rtpmt_network_packet_PackageInformation_Sensor_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return    rtpmt.network.packet.NetworkMessage.internal_static_rtpmt_network_packet_PackageInformation_Sensor_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                    rtpmt.network.packet.NetworkMessage.PackageInformation.Sensor.class, rtpmt.network.packet.NetworkMessage.PackageInformation.Sensor.Builder.class);
        }

        // Construct using rtpmt.network.packet.NetworkMessage.PackageInformation.Sensor.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          sensorType_ = rtpmt.network.packet.NetworkMessage.PackageInformation.SensorType.TEMPERATURE;
          bitField0_ = (bitField0_ & ~0x00000001);
          sensorValue_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          sensorUnit_ = "";
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return    rtpmt.network.packet.NetworkMessage.internal_static_rtpmt_network_packet_PackageInformation_Sensor_descriptor;
        }

        public  rtpmt.network.packet.NetworkMessage.PackageInformation.Sensor getDefaultInstanceForType() {
          return    rtpmt.network.packet.NetworkMessage.PackageInformation.Sensor.getDefaultInstance();
        }

        public  rtpmt.network.packet.NetworkMessage.PackageInformation.Sensor build() {
                    rtpmt.network.packet.NetworkMessage.PackageInformation.Sensor result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public  rtpmt.network.packet.NetworkMessage.PackageInformation.Sensor buildPartial() {
                    rtpmt.network.packet.NetworkMessage.PackageInformation.Sensor result = new rtpmt.network.packet.NetworkMessage.PackageInformation.Sensor(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.sensorType_ = sensorType_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.sensorValue_ = sensorValue_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.sensorUnit_ = sensorUnit_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof rtpmt.network.packet.NetworkMessage.PackageInformation.Sensor) {
            return mergeFrom((rtpmt.network.packet.NetworkMessage.PackageInformation.Sensor)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(rtpmt.network.packet.NetworkMessage.PackageInformation.Sensor other) {
          if (other == rtpmt.network.packet.NetworkMessage.PackageInformation.Sensor.getDefaultInstance()) return this;
          if (other.hasSensorType()) {
            setSensorType(other.getSensorType());
          }
          if (other.hasSensorValue()) {
            bitField0_ |= 0x00000002;
            sensorValue_ = other.sensorValue_;
            onChanged();
          }
          if (other.hasSensorUnit()) {
            bitField0_ |= 0x00000004;
            sensorUnit_ = other.sensorUnit_;
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasSensorType()) {
            
            return false;
          }
          if (!hasSensorValue()) {
            
            return false;
          }
          if (!hasSensorUnit()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
                    rtpmt.network.packet.NetworkMessage.PackageInformation.Sensor parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (rtpmt.network.packet.NetworkMessage.PackageInformation.Sensor) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // required .rtpmt.network.packet.PackageInformation.SensorType sensorType = 1 [default = TEMPERATURE];
        private rtpmt.network.packet.NetworkMessage.PackageInformation.SensorType sensorType_ = rtpmt.network.packet.NetworkMessage.PackageInformation.SensorType.TEMPERATURE;
        /**
         * <code>required .rtpmt.network.packet.PackageInformation.SensorType sensorType = 1 [default = TEMPERATURE];</code>
         */
        public boolean hasSensorType() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required .rtpmt.network.packet.PackageInformation.SensorType sensorType = 1 [default = TEMPERATURE];</code>
         */
        public  rtpmt.network.packet.NetworkMessage.PackageInformation.SensorType getSensorType() {
          return sensorType_;
        }
        /**
         * <code>required .rtpmt.network.packet.PackageInformation.SensorType sensorType = 1 [default = TEMPERATURE];</code>
         */
        public Builder setSensorType(rtpmt.network.packet.NetworkMessage.PackageInformation.SensorType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          sensorType_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required .rtpmt.network.packet.PackageInformation.SensorType sensorType = 1 [default = TEMPERATURE];</code>
         */
        public Builder clearSensorType() {
          bitField0_ = (bitField0_ & ~0x00000001);
          sensorType_ = rtpmt.network.packet.NetworkMessage.PackageInformation.SensorType.TEMPERATURE;
          onChanged();
          return this;
        }

        // required string sensorValue = 2;
        private java.lang.Object sensorValue_ = "";
        /**
         * <code>required string sensorValue = 2;</code>
         */
        public boolean hasSensorValue() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required string sensorValue = 2;</code>
         */
        public java.lang.String getSensorValue() {
          java.lang.Object ref = sensorValue_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            sensorValue_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string sensorValue = 2;</code>
         */
        public com.google.protobuf.ByteString
            getSensorValueBytes() {
          java.lang.Object ref = sensorValue_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            sensorValue_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string sensorValue = 2;</code>
         */
        public Builder setSensorValue(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          sensorValue_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string sensorValue = 2;</code>
         */
        public Builder clearSensorValue() {
          bitField0_ = (bitField0_ & ~0x00000002);
          sensorValue_ = getDefaultInstance().getSensorValue();
          onChanged();
          return this;
        }
        /**
         * <code>required string sensorValue = 2;</code>
         */
        public Builder setSensorValueBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          sensorValue_ = value;
          onChanged();
          return this;
        }

        // required string sensorUnit = 3;
        private java.lang.Object sensorUnit_ = "";
        /**
         * <code>required string sensorUnit = 3;</code>
         */
        public boolean hasSensorUnit() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>required string sensorUnit = 3;</code>
         */
        public java.lang.String getSensorUnit() {
          java.lang.Object ref = sensorUnit_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            sensorUnit_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string sensorUnit = 3;</code>
         */
        public com.google.protobuf.ByteString
            getSensorUnitBytes() {
          java.lang.Object ref = sensorUnit_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            sensorUnit_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string sensorUnit = 3;</code>
         */
        public Builder setSensorUnit(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          sensorUnit_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string sensorUnit = 3;</code>
         */
        public Builder clearSensorUnit() {
          bitField0_ = (bitField0_ & ~0x00000004);
          sensorUnit_ = getDefaultInstance().getSensorUnit();
          onChanged();
          return this;
        }
        /**
         * <code>required string sensorUnit = 3;</code>
         */
        public Builder setSensorUnitBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          sensorUnit_ = value;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:rtpmt.network.packet.PackageInformation.Sensor)
      }

      static {
        defaultInstance = new Sensor(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:rtpmt.network.packet.PackageInformation.Sensor)
    }

    public interface ConfigOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // required .rtpmt.network.packet.PackageInformation.SensorType sensorType = 1 [default = TEMPERATURE];
      /**
       * <code>required .rtpmt.network.packet.PackageInformation.SensorType sensorType = 1 [default = TEMPERATURE];</code>
       */
      boolean hasSensorType();
      /**
       * <code>required .rtpmt.network.packet.PackageInformation.SensorType sensorType = 1 [default = TEMPERATURE];</code>
       */
            rtpmt.network.packet.NetworkMessage.PackageInformation.SensorType getSensorType();

      // required double maxThreshold = 2;
      /**
       * <code>required double maxThreshold = 2;</code>
       */
      boolean hasMaxThreshold();
      /**
       * <code>required double maxThreshold = 2;</code>
       */
      double getMaxThreshold();

      // optional double minThreshold = 3;
      /**
       * <code>optional double minThreshold = 3;</code>
       */
      boolean hasMinThreshold();
      /**
       * <code>optional double minThreshold = 3;</code>
       */
      double getMinThreshold();

      // optional int32 timePeriod = 4;
      /**
       * <code>optional int32 timePeriod = 4;</code>
       */
      boolean hasTimePeriod();
      /**
       * <code>optional int32 timePeriod = 4;</code>
       */
      int getTimePeriod();

      // required int32 timePeriodAfterThreshold = 5;
      /**
       * <code>required int32 timePeriodAfterThreshold = 5;</code>
       */
      boolean hasTimePeriodAfterThreshold();
      /**
       * <code>required int32 timePeriodAfterThreshold = 5;</code>
       */
      int getTimePeriodAfterThreshold();
    }
    /**
     * Protobuf type {@code rtpmt.network.packet.PackageInformation.Config}
     */
    public static final class Config extends
        com.google.protobuf.GeneratedMessage
        implements ConfigOrBuilder {
      // Use Config.newBuilder() to construct.
      private Config(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Config(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Config defaultInstance;
      public static Config getDefaultInstance() {
        return defaultInstance;
      }

      public Config getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Config(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                            rtpmt.network.packet.NetworkMessage.PackageInformation.SensorType value = rtpmt.network.packet.NetworkMessage.PackageInformation.SensorType.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  sensorType_ = value;
                }
                break;
              }
              case 17: {
                bitField0_ |= 0x00000002;
                maxThreshold_ = input.readDouble();
                break;
              }
              case 25: {
                bitField0_ |= 0x00000004;
                minThreshold_ = input.readDouble();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                timePeriod_ = input.readInt32();
                break;
              }
              case 40: {
                bitField0_ |= 0x00000010;
                timePeriodAfterThreshold_ = input.readInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return  rtpmt.network.packet.NetworkMessage.internal_static_rtpmt_network_packet_PackageInformation_Config_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return  rtpmt.network.packet.NetworkMessage.internal_static_rtpmt_network_packet_PackageInformation_Config_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                rtpmt.network.packet.NetworkMessage.PackageInformation.Config.class, rtpmt.network.packet.NetworkMessage.PackageInformation.Config.Builder.class);
      }

      public static com.google.protobuf.Parser<Config> PARSER =
          new com.google.protobuf.AbstractParser<Config>() {
        public Config parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Config(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Config> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // required .rtpmt.network.packet.PackageInformation.SensorType sensorType = 1 [default = TEMPERATURE];
      public static final int SENSORTYPE_FIELD_NUMBER = 1;
      private rtpmt.network.packet.NetworkMessage.PackageInformation.SensorType sensorType_;
      /**
       * <code>required .rtpmt.network.packet.PackageInformation.SensorType sensorType = 1 [default = TEMPERATURE];</code>
       */
      public boolean hasSensorType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .rtpmt.network.packet.PackageInformation.SensorType sensorType = 1 [default = TEMPERATURE];</code>
       */
      public rtpmt.network.packet.NetworkMessage.PackageInformation.SensorType getSensorType() {
        return sensorType_;
      }

      // required double maxThreshold = 2;
      public static final int MAXTHRESHOLD_FIELD_NUMBER = 2;
      private double maxThreshold_;
      /**
       * <code>required double maxThreshold = 2;</code>
       */
      public boolean hasMaxThreshold() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required double maxThreshold = 2;</code>
       */
      public double getMaxThreshold() {
        return maxThreshold_;
      }

      // optional double minThreshold = 3;
      public static final int MINTHRESHOLD_FIELD_NUMBER = 3;
      private double minThreshold_;
      /**
       * <code>optional double minThreshold = 3;</code>
       */
      public boolean hasMinThreshold() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional double minThreshold = 3;</code>
       */
      public double getMinThreshold() {
        return minThreshold_;
      }

      // optional int32 timePeriod = 4;
      public static final int TIMEPERIOD_FIELD_NUMBER = 4;
      private int timePeriod_;
      /**
       * <code>optional int32 timePeriod = 4;</code>
       */
      public boolean hasTimePeriod() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 timePeriod = 4;</code>
       */
      public int getTimePeriod() {
        return timePeriod_;
      }

      // required int32 timePeriodAfterThreshold = 5;
      public static final int TIMEPERIODAFTERTHRESHOLD_FIELD_NUMBER = 5;
      private int timePeriodAfterThreshold_;
      /**
       * <code>required int32 timePeriodAfterThreshold = 5;</code>
       */
      public boolean hasTimePeriodAfterThreshold() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 timePeriodAfterThreshold = 5;</code>
       */
      public int getTimePeriodAfterThreshold() {
        return timePeriodAfterThreshold_;
      }

      private void initFields() {
        sensorType_ = rtpmt.network.packet.NetworkMessage.PackageInformation.SensorType.TEMPERATURE;
        maxThreshold_ = 0D;
        minThreshold_ = 0D;
        timePeriod_ = 0;
        timePeriodAfterThreshold_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasSensorType()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasMaxThreshold()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasTimePeriodAfterThreshold()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, sensorType_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeDouble(2, maxThreshold_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeDouble(3, minThreshold_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeInt32(4, timePeriod_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeInt32(5, timePeriodAfterThreshold_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, sensorType_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(2, maxThreshold_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(3, minThreshold_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(4, timePeriod_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(5, timePeriodAfterThreshold_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static rtpmt.network.packet.NetworkMessage.PackageInformation.Config parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static rtpmt.network.packet.NetworkMessage.PackageInformation.Config parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static rtpmt.network.packet.NetworkMessage.PackageInformation.Config parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static rtpmt.network.packet.NetworkMessage.PackageInformation.Config parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static rtpmt.network.packet.NetworkMessage.PackageInformation.Config parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static rtpmt.network.packet.NetworkMessage.PackageInformation.Config parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static rtpmt.network.packet.NetworkMessage.PackageInformation.Config parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static rtpmt.network.packet.NetworkMessage.PackageInformation.Config parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static rtpmt.network.packet.NetworkMessage.PackageInformation.Config parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static rtpmt.network.packet.NetworkMessage.PackageInformation.Config parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(rtpmt.network.packet.NetworkMessage.PackageInformation.Config prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code rtpmt.network.packet.PackageInformation.Config}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements rtpmt.network.packet.NetworkMessage.PackageInformation.ConfigOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return    rtpmt.network.packet.NetworkMessage.internal_static_rtpmt_network_packet_PackageInformation_Config_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return    rtpmt.network.packet.NetworkMessage.internal_static_rtpmt_network_packet_PackageInformation_Config_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                    rtpmt.network.packet.NetworkMessage.PackageInformation.Config.class, rtpmt.network.packet.NetworkMessage.PackageInformation.Config.Builder.class);
        }

        // Construct using rtpmt.network.packet.NetworkMessage.PackageInformation.Config.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          sensorType_ = rtpmt.network.packet.NetworkMessage.PackageInformation.SensorType.TEMPERATURE;
          bitField0_ = (bitField0_ & ~0x00000001);
          maxThreshold_ = 0D;
          bitField0_ = (bitField0_ & ~0x00000002);
          minThreshold_ = 0D;
          bitField0_ = (bitField0_ & ~0x00000004);
          timePeriod_ = 0;
          bitField0_ = (bitField0_ & ~0x00000008);
          timePeriodAfterThreshold_ = 0;
          bitField0_ = (bitField0_ & ~0x00000010);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return    rtpmt.network.packet.NetworkMessage.internal_static_rtpmt_network_packet_PackageInformation_Config_descriptor;
        }

        public  rtpmt.network.packet.NetworkMessage.PackageInformation.Config getDefaultInstanceForType() {
          return    rtpmt.network.packet.NetworkMessage.PackageInformation.Config.getDefaultInstance();
        }

        public  rtpmt.network.packet.NetworkMessage.PackageInformation.Config build() {
                    rtpmt.network.packet.NetworkMessage.PackageInformation.Config result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public  rtpmt.network.packet.NetworkMessage.PackageInformation.Config buildPartial() {
                    rtpmt.network.packet.NetworkMessage.PackageInformation.Config result = new rtpmt.network.packet.NetworkMessage.PackageInformation.Config(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.sensorType_ = sensorType_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.maxThreshold_ = maxThreshold_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.minThreshold_ = minThreshold_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.timePeriod_ = timePeriod_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.timePeriodAfterThreshold_ = timePeriodAfterThreshold_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof rtpmt.network.packet.NetworkMessage.PackageInformation.Config) {
            return mergeFrom((rtpmt.network.packet.NetworkMessage.PackageInformation.Config)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(rtpmt.network.packet.NetworkMessage.PackageInformation.Config other) {
          if (other == rtpmt.network.packet.NetworkMessage.PackageInformation.Config.getDefaultInstance()) return this;
          if (other.hasSensorType()) {
            setSensorType(other.getSensorType());
          }
          if (other.hasMaxThreshold()) {
            setMaxThreshold(other.getMaxThreshold());
          }
          if (other.hasMinThreshold()) {
            setMinThreshold(other.getMinThreshold());
          }
          if (other.hasTimePeriod()) {
            setTimePeriod(other.getTimePeriod());
          }
          if (other.hasTimePeriodAfterThreshold()) {
            setTimePeriodAfterThreshold(other.getTimePeriodAfterThreshold());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasSensorType()) {
            
            return false;
          }
          if (!hasMaxThreshold()) {
            
            return false;
          }
          if (!hasTimePeriodAfterThreshold()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
                    rtpmt.network.packet.NetworkMessage.PackageInformation.Config parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (rtpmt.network.packet.NetworkMessage.PackageInformation.Config) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // required .rtpmt.network.packet.PackageInformation.SensorType sensorType = 1 [default = TEMPERATURE];
        private rtpmt.network.packet.NetworkMessage.PackageInformation.SensorType sensorType_ = rtpmt.network.packet.NetworkMessage.PackageInformation.SensorType.TEMPERATURE;
        /**
         * <code>required .rtpmt.network.packet.PackageInformation.SensorType sensorType = 1 [default = TEMPERATURE];</code>
         */
        public boolean hasSensorType() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required .rtpmt.network.packet.PackageInformation.SensorType sensorType = 1 [default = TEMPERATURE];</code>
         */
        public  rtpmt.network.packet.NetworkMessage.PackageInformation.SensorType getSensorType() {
          return sensorType_;
        }
        /**
         * <code>required .rtpmt.network.packet.PackageInformation.SensorType sensorType = 1 [default = TEMPERATURE];</code>
         */
        public Builder setSensorType(rtpmt.network.packet.NetworkMessage.PackageInformation.SensorType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          sensorType_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required .rtpmt.network.packet.PackageInformation.SensorType sensorType = 1 [default = TEMPERATURE];</code>
         */
        public Builder clearSensorType() {
          bitField0_ = (bitField0_ & ~0x00000001);
          sensorType_ = rtpmt.network.packet.NetworkMessage.PackageInformation.SensorType.TEMPERATURE;
          onChanged();
          return this;
        }

        // required double maxThreshold = 2;
        private double maxThreshold_ ;
        /**
         * <code>required double maxThreshold = 2;</code>
         */
        public boolean hasMaxThreshold() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required double maxThreshold = 2;</code>
         */
        public double getMaxThreshold() {
          return maxThreshold_;
        }
        /**
         * <code>required double maxThreshold = 2;</code>
         */
        public Builder setMaxThreshold(double value) {
          bitField0_ |= 0x00000002;
          maxThreshold_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required double maxThreshold = 2;</code>
         */
        public Builder clearMaxThreshold() {
          bitField0_ = (bitField0_ & ~0x00000002);
          maxThreshold_ = 0D;
          onChanged();
          return this;
        }

        // optional double minThreshold = 3;
        private double minThreshold_ ;
        /**
         * <code>optional double minThreshold = 3;</code>
         */
        public boolean hasMinThreshold() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional double minThreshold = 3;</code>
         */
        public double getMinThreshold() {
          return minThreshold_;
        }
        /**
         * <code>optional double minThreshold = 3;</code>
         */
        public Builder setMinThreshold(double value) {
          bitField0_ |= 0x00000004;
          minThreshold_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional double minThreshold = 3;</code>
         */
        public Builder clearMinThreshold() {
          bitField0_ = (bitField0_ & ~0x00000004);
          minThreshold_ = 0D;
          onChanged();
          return this;
        }

        // optional int32 timePeriod = 4;
        private int timePeriod_ ;
        /**
         * <code>optional int32 timePeriod = 4;</code>
         */
        public boolean hasTimePeriod() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional int32 timePeriod = 4;</code>
         */
        public int getTimePeriod() {
          return timePeriod_;
        }
        /**
         * <code>optional int32 timePeriod = 4;</code>
         */
        public Builder setTimePeriod(int value) {
          bitField0_ |= 0x00000008;
          timePeriod_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 timePeriod = 4;</code>
         */
        public Builder clearTimePeriod() {
          bitField0_ = (bitField0_ & ~0x00000008);
          timePeriod_ = 0;
          onChanged();
          return this;
        }

        // required int32 timePeriodAfterThreshold = 5;
        private int timePeriodAfterThreshold_ ;
        /**
         * <code>required int32 timePeriodAfterThreshold = 5;</code>
         */
        public boolean hasTimePeriodAfterThreshold() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>required int32 timePeriodAfterThreshold = 5;</code>
         */
        public int getTimePeriodAfterThreshold() {
          return timePeriodAfterThreshold_;
        }
        /**
         * <code>required int32 timePeriodAfterThreshold = 5;</code>
         */
        public Builder setTimePeriodAfterThreshold(int value) {
          bitField0_ |= 0x00000010;
          timePeriodAfterThreshold_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required int32 timePeriodAfterThreshold = 5;</code>
         */
        public Builder clearTimePeriodAfterThreshold() {
          bitField0_ = (bitField0_ & ~0x00000010);
          timePeriodAfterThreshold_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:rtpmt.network.packet.PackageInformation.Config)
      }

      static {
        defaultInstance = new Config(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:rtpmt.network.packet.PackageInformation.Config)
    }

    private int bitField0_;
    // required string sensorId = 1;
    public static final int SENSORID_FIELD_NUMBER = 1;
    private java.lang.Object sensorId_;
    /**
     * <code>required string sensorId = 1;</code>
     */
    public boolean hasSensorId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string sensorId = 1;</code>
     */
    public java.lang.String getSensorId() {
      java.lang.Object ref = sensorId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          sensorId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string sensorId = 1;</code>
     */
    public com.google.protobuf.ByteString
        getSensorIdBytes() {
      java.lang.Object ref = sensorId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sensorId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string packageId = 2;
    public static final int PACKAGEID_FIELD_NUMBER = 2;
    private java.lang.Object packageId_;
    /**
     * <code>required string packageId = 2;</code>
     */
    public boolean hasPackageId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string packageId = 2;</code>
     */
    public java.lang.String getPackageId() {
      java.lang.Object ref = packageId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          packageId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string packageId = 2;</code>
     */
    public com.google.protobuf.ByteString
        getPackageIdBytes() {
      java.lang.Object ref = packageId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        packageId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string truckId = 3;
    public static final int TRUCKID_FIELD_NUMBER = 3;
    private java.lang.Object truckId_;
    /**
     * <code>optional string truckId = 3;</code>
     */
    public boolean hasTruckId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string truckId = 3;</code>
     */
    public java.lang.String getTruckId() {
      java.lang.Object ref = truckId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          truckId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string truckId = 3;</code>
     */
    public com.google.protobuf.ByteString
        getTruckIdBytes() {
      java.lang.Object ref = truckId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        truckId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .rtpmt.network.packet.PackageInformation.LocationInformation location = 4;
    public static final int LOCATION_FIELD_NUMBER = 4;
    private rtpmt.network.packet.NetworkMessage.PackageInformation.LocationInformation location_;
    /**
     * <code>optional .rtpmt.network.packet.PackageInformation.LocationInformation location = 4;</code>
     */
    public boolean hasLocation() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .rtpmt.network.packet.PackageInformation.LocationInformation location = 4;</code>
     */
    public rtpmt.network.packet.NetworkMessage.PackageInformation.LocationInformation getLocation() {
      return location_;
    }
    /**
     * <code>optional .rtpmt.network.packet.PackageInformation.LocationInformation location = 4;</code>
     */
    public rtpmt.network.packet.NetworkMessage.PackageInformation.LocationInformationOrBuilder getLocationOrBuilder() {
      return location_;
    }

    // repeated .rtpmt.network.packet.PackageInformation.Sensor sensors = 5;
    public static final int SENSORS_FIELD_NUMBER = 5;
    private java.util.List<rtpmt.network.packet.NetworkMessage.PackageInformation.Sensor> sensors_;
    /**
     * <code>repeated .rtpmt.network.packet.PackageInformation.Sensor sensors = 5;</code>
     */
    public java.util.List<rtpmt.network.packet.NetworkMessage.PackageInformation.Sensor> getSensorsList() {
      return sensors_;
    }
    /**
     * <code>repeated .rtpmt.network.packet.PackageInformation.Sensor sensors = 5;</code>
     */
    public java.util.List<? extends rtpmt.network.packet.NetworkMessage.PackageInformation.SensorOrBuilder> 
        getSensorsOrBuilderList() {
      return sensors_;
    }
    /**
     * <code>repeated .rtpmt.network.packet.PackageInformation.Sensor sensors = 5;</code>
     */
    public int getSensorsCount() {
      return sensors_.size();
    }
    /**
     * <code>repeated .rtpmt.network.packet.PackageInformation.Sensor sensors = 5;</code>
     */
    public rtpmt.network.packet.NetworkMessage.PackageInformation.Sensor getSensors(int index) {
      return sensors_.get(index);
    }
    /**
     * <code>repeated .rtpmt.network.packet.PackageInformation.Sensor sensors = 5;</code>
     */
    public rtpmt.network.packet.NetworkMessage.PackageInformation.SensorOrBuilder getSensorsOrBuilder(
        int index) {
      return sensors_.get(index);
    }

    // repeated .rtpmt.network.packet.PackageInformation.Config configs = 6;
    public static final int CONFIGS_FIELD_NUMBER = 6;
    private java.util.List<rtpmt.network.packet.NetworkMessage.PackageInformation.Config> configs_;
    /**
     * <code>repeated .rtpmt.network.packet.PackageInformation.Config configs = 6;</code>
     */
    public java.util.List<rtpmt.network.packet.NetworkMessage.PackageInformation.Config> getConfigsList() {
      return configs_;
    }
    /**
     * <code>repeated .rtpmt.network.packet.PackageInformation.Config configs = 6;</code>
     */
    public java.util.List<? extends rtpmt.network.packet.NetworkMessage.PackageInformation.ConfigOrBuilder> 
        getConfigsOrBuilderList() {
      return configs_;
    }
    /**
     * <code>repeated .rtpmt.network.packet.PackageInformation.Config configs = 6;</code>
     */
    public int getConfigsCount() {
      return configs_.size();
    }
    /**
     * <code>repeated .rtpmt.network.packet.PackageInformation.Config configs = 6;</code>
     */
    public rtpmt.network.packet.NetworkMessage.PackageInformation.Config getConfigs(int index) {
      return configs_.get(index);
    }
    /**
     * <code>repeated .rtpmt.network.packet.PackageInformation.Config configs = 6;</code>
     */
    public rtpmt.network.packet.NetworkMessage.PackageInformation.ConfigOrBuilder getConfigsOrBuilder(
        int index) {
      return configs_.get(index);
    }

    // required uint64 timeStamp = 7;
    public static final int TIMESTAMP_FIELD_NUMBER = 7;
    private long timeStamp_;
    /**
     * <code>required uint64 timeStamp = 7;</code>
     */
    public boolean hasTimeStamp() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required uint64 timeStamp = 7;</code>
     */
    public long getTimeStamp() {
      return timeStamp_;
    }

    // required .rtpmt.network.packet.PackageInformation.MessageType messageType = 8;
    public static final int MESSAGETYPE_FIELD_NUMBER = 8;
    private rtpmt.network.packet.NetworkMessage.PackageInformation.MessageType messageType_;
    /**
     * <code>required .rtpmt.network.packet.PackageInformation.MessageType messageType = 8;</code>
     */
    public boolean hasMessageType() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required .rtpmt.network.packet.PackageInformation.MessageType messageType = 8;</code>
     */
    public rtpmt.network.packet.NetworkMessage.PackageInformation.MessageType getMessageType() {
      return messageType_;
    }

    // required bool isRealTime = 9;
    public static final int ISREALTIME_FIELD_NUMBER = 9;
    private boolean isRealTime_;
    /**
     * <code>required bool isRealTime = 9;</code>
     */
    public boolean hasIsRealTime() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required bool isRealTime = 9;</code>
     */
    public boolean getIsRealTime() {
      return isRealTime_;
    }

    // optional string comments = 10;
    public static final int COMMENTS_FIELD_NUMBER = 10;
    private java.lang.Object comments_;
    /**
     * <code>optional string comments = 10;</code>
     */
    public boolean hasComments() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional string comments = 10;</code>
     */
    public java.lang.String getComments() {
      java.lang.Object ref = comments_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          comments_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string comments = 10;</code>
     */
    public com.google.protobuf.ByteString
        getCommentsBytes() {
      java.lang.Object ref = comments_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        comments_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional bool isAboveThreshold = 11;
    public static final int ISABOVETHRESHOLD_FIELD_NUMBER = 11;
    private boolean isAboveThreshold_;
    /**
     * <code>optional bool isAboveThreshold = 11;</code>
     */
    public boolean hasIsAboveThreshold() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional bool isAboveThreshold = 11;</code>
     */
    public boolean getIsAboveThreshold() {
      return isAboveThreshold_;
    }

    private void initFields() {
      sensorId_ = "";
      packageId_ = "";
      truckId_ = "";
      location_ = rtpmt.network.packet.NetworkMessage.PackageInformation.LocationInformation.getDefaultInstance();
      sensors_ = java.util.Collections.emptyList();
      configs_ = java.util.Collections.emptyList();
      timeStamp_ = 0L;
      messageType_ = rtpmt.network.packet.NetworkMessage.PackageInformation.MessageType.CONFIG;
      isRealTime_ = false;
      comments_ = "";
      isAboveThreshold_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasSensorId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPackageId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTimeStamp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMessageType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasIsRealTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasLocation()) {
        if (!getLocation().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getSensorsCount(); i++) {
        if (!getSensors(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getConfigsCount(); i++) {
        if (!getConfigs(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getSensorIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getPackageIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getTruckIdBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, location_);
      }
      for (int i = 0; i < sensors_.size(); i++) {
        output.writeMessage(5, sensors_.get(i));
      }
      for (int i = 0; i < configs_.size(); i++) {
        output.writeMessage(6, configs_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt64(7, timeStamp_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeEnum(8, messageType_.getNumber());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(9, isRealTime_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBytes(10, getCommentsBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBool(11, isAboveThreshold_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getSensorIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getPackageIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getTruckIdBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, location_);
      }
      for (int i = 0; i < sensors_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, sensors_.get(i));
      }
      for (int i = 0; i < configs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, configs_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(7, timeStamp_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(8, messageType_.getNumber());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(9, isRealTime_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(10, getCommentsBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(11, isAboveThreshold_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static rtpmt.network.packet.NetworkMessage.PackageInformation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rtpmt.network.packet.NetworkMessage.PackageInformation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rtpmt.network.packet.NetworkMessage.PackageInformation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rtpmt.network.packet.NetworkMessage.PackageInformation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rtpmt.network.packet.NetworkMessage.PackageInformation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static rtpmt.network.packet.NetworkMessage.PackageInformation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static rtpmt.network.packet.NetworkMessage.PackageInformation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static rtpmt.network.packet.NetworkMessage.PackageInformation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static rtpmt.network.packet.NetworkMessage.PackageInformation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static rtpmt.network.packet.NetworkMessage.PackageInformation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(rtpmt.network.packet.NetworkMessage.PackageInformation prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code rtpmt.network.packet.PackageInformation}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements rtpmt.network.packet.NetworkMessage.PackageInformationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return  rtpmt.network.packet.NetworkMessage.internal_static_rtpmt_network_packet_PackageInformation_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return  rtpmt.network.packet.NetworkMessage.internal_static_rtpmt_network_packet_PackageInformation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                rtpmt.network.packet.NetworkMessage.PackageInformation.class, rtpmt.network.packet.NetworkMessage.PackageInformation.Builder.class);
      }

      // Construct using rtpmt.network.packet.NetworkMessage.PackageInformation.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getLocationFieldBuilder();
          getSensorsFieldBuilder();
          getConfigsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        sensorId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        packageId_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        truckId_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        if (locationBuilder_ == null) {
          location_ = rtpmt.network.packet.NetworkMessage.PackageInformation.LocationInformation.getDefaultInstance();
        } else {
          locationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (sensorsBuilder_ == null) {
          sensors_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          sensorsBuilder_.clear();
        }
        if (configsBuilder_ == null) {
          configs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          configsBuilder_.clear();
        }
        timeStamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000040);
        messageType_ = rtpmt.network.packet.NetworkMessage.PackageInformation.MessageType.CONFIG;
        bitField0_ = (bitField0_ & ~0x00000080);
        isRealTime_ = false;
        bitField0_ = (bitField0_ & ~0x00000100);
        comments_ = "";
        bitField0_ = (bitField0_ & ~0x00000200);
        isAboveThreshold_ = false;
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return  rtpmt.network.packet.NetworkMessage.internal_static_rtpmt_network_packet_PackageInformation_descriptor;
      }

      public rtpmt.network.packet.NetworkMessage.PackageInformation getDefaultInstanceForType() {
        return  rtpmt.network.packet.NetworkMessage.PackageInformation.getDefaultInstance();
      }

      public rtpmt.network.packet.NetworkMessage.PackageInformation build() {
                rtpmt.network.packet.NetworkMessage.PackageInformation result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public rtpmt.network.packet.NetworkMessage.PackageInformation buildPartial() {
                rtpmt.network.packet.NetworkMessage.PackageInformation result = new rtpmt.network.packet.NetworkMessage.PackageInformation(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.sensorId_ = sensorId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.packageId_ = packageId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.truckId_ = truckId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (locationBuilder_ == null) {
          result.location_ = location_;
        } else {
          result.location_ = locationBuilder_.build();
        }
        if (sensorsBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            sensors_ = java.util.Collections.unmodifiableList(sensors_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.sensors_ = sensors_;
        } else {
          result.sensors_ = sensorsBuilder_.build();
        }
        if (configsBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            configs_ = java.util.Collections.unmodifiableList(configs_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.configs_ = configs_;
        } else {
          result.configs_ = configsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000010;
        }
        result.timeStamp_ = timeStamp_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000020;
        }
        result.messageType_ = messageType_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000040;
        }
        result.isRealTime_ = isRealTime_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000080;
        }
        result.comments_ = comments_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000100;
        }
        result.isAboveThreshold_ = isAboveThreshold_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof rtpmt.network.packet.NetworkMessage.PackageInformation) {
          return mergeFrom((rtpmt.network.packet.NetworkMessage.PackageInformation)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(rtpmt.network.packet.NetworkMessage.PackageInformation other) {
        if (other == rtpmt.network.packet.NetworkMessage.PackageInformation.getDefaultInstance()) return this;
        if (other.hasSensorId()) {
          bitField0_ |= 0x00000001;
          sensorId_ = other.sensorId_;
          onChanged();
        }
        if (other.hasPackageId()) {
          bitField0_ |= 0x00000002;
          packageId_ = other.packageId_;
          onChanged();
        }
        if (other.hasTruckId()) {
          bitField0_ |= 0x00000004;
          truckId_ = other.truckId_;
          onChanged();
        }
        if (other.hasLocation()) {
          mergeLocation(other.getLocation());
        }
        if (sensorsBuilder_ == null) {
          if (!other.sensors_.isEmpty()) {
            if (sensors_.isEmpty()) {
              sensors_ = other.sensors_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureSensorsIsMutable();
              sensors_.addAll(other.sensors_);
            }
            onChanged();
          }
        } else {
          if (!other.sensors_.isEmpty()) {
            if (sensorsBuilder_.isEmpty()) {
              sensorsBuilder_.dispose();
              sensorsBuilder_ = null;
              sensors_ = other.sensors_;
              bitField0_ = (bitField0_ & ~0x00000010);
              sensorsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSensorsFieldBuilder() : null;
            } else {
              sensorsBuilder_.addAllMessages(other.sensors_);
            }
          }
        }
        if (configsBuilder_ == null) {
          if (!other.configs_.isEmpty()) {
            if (configs_.isEmpty()) {
              configs_ = other.configs_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureConfigsIsMutable();
              configs_.addAll(other.configs_);
            }
            onChanged();
          }
        } else {
          if (!other.configs_.isEmpty()) {
            if (configsBuilder_.isEmpty()) {
              configsBuilder_.dispose();
              configsBuilder_ = null;
              configs_ = other.configs_;
              bitField0_ = (bitField0_ & ~0x00000020);
              configsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getConfigsFieldBuilder() : null;
            } else {
              configsBuilder_.addAllMessages(other.configs_);
            }
          }
        }
        if (other.hasTimeStamp()) {
          setTimeStamp(other.getTimeStamp());
        }
        if (other.hasMessageType()) {
          setMessageType(other.getMessageType());
        }
        if (other.hasIsRealTime()) {
          setIsRealTime(other.getIsRealTime());
        }
        if (other.hasComments()) {
          bitField0_ |= 0x00000200;
          comments_ = other.comments_;
          onChanged();
        }
        if (other.hasIsAboveThreshold()) {
          setIsAboveThreshold(other.getIsAboveThreshold());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSensorId()) {
          
          return false;
        }
        if (!hasPackageId()) {
          
          return false;
        }
        if (!hasTimeStamp()) {
          
          return false;
        }
        if (!hasMessageType()) {
          
          return false;
        }
        if (!hasIsRealTime()) {
          
          return false;
        }
        if (hasLocation()) {
          if (!getLocation().isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getSensorsCount(); i++) {
          if (!getSensors(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getConfigsCount(); i++) {
          if (!getConfigs(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
                rtpmt.network.packet.NetworkMessage.PackageInformation parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (rtpmt.network.packet.NetworkMessage.PackageInformation) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string sensorId = 1;
      private java.lang.Object sensorId_ = "";
      /**
       * <code>required string sensorId = 1;</code>
       */
      public boolean hasSensorId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string sensorId = 1;</code>
       */
      public java.lang.String getSensorId() {
        java.lang.Object ref = sensorId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          sensorId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string sensorId = 1;</code>
       */
      public com.google.protobuf.ByteString
          getSensorIdBytes() {
        java.lang.Object ref = sensorId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sensorId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string sensorId = 1;</code>
       */
      public Builder setSensorId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        sensorId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string sensorId = 1;</code>
       */
      public Builder clearSensorId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        sensorId_ = getDefaultInstance().getSensorId();
        onChanged();
        return this;
      }
      /**
       * <code>required string sensorId = 1;</code>
       */
      public Builder setSensorIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        sensorId_ = value;
        onChanged();
        return this;
      }

      // required string packageId = 2;
      private java.lang.Object packageId_ = "";
      /**
       * <code>required string packageId = 2;</code>
       */
      public boolean hasPackageId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string packageId = 2;</code>
       */
      public java.lang.String getPackageId() {
        java.lang.Object ref = packageId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          packageId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string packageId = 2;</code>
       */
      public com.google.protobuf.ByteString
          getPackageIdBytes() {
        java.lang.Object ref = packageId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          packageId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string packageId = 2;</code>
       */
      public Builder setPackageId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        packageId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string packageId = 2;</code>
       */
      public Builder clearPackageId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        packageId_ = getDefaultInstance().getPackageId();
        onChanged();
        return this;
      }
      /**
       * <code>required string packageId = 2;</code>
       */
      public Builder setPackageIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        packageId_ = value;
        onChanged();
        return this;
      }

      // optional string truckId = 3;
      private java.lang.Object truckId_ = "";
      /**
       * <code>optional string truckId = 3;</code>
       */
      public boolean hasTruckId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string truckId = 3;</code>
       */
      public java.lang.String getTruckId() {
        java.lang.Object ref = truckId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          truckId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string truckId = 3;</code>
       */
      public com.google.protobuf.ByteString
          getTruckIdBytes() {
        java.lang.Object ref = truckId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          truckId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string truckId = 3;</code>
       */
      public Builder setTruckId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        truckId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string truckId = 3;</code>
       */
      public Builder clearTruckId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        truckId_ = getDefaultInstance().getTruckId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string truckId = 3;</code>
       */
      public Builder setTruckIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        truckId_ = value;
        onChanged();
        return this;
      }

      // optional .rtpmt.network.packet.PackageInformation.LocationInformation location = 4;
      private rtpmt.network.packet.NetworkMessage.PackageInformation.LocationInformation location_ = rtpmt.network.packet.NetworkMessage.PackageInformation.LocationInformation.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
            rtpmt.network.packet.NetworkMessage.PackageInformation.LocationInformation, rtpmt.network.packet.NetworkMessage.PackageInformation.LocationInformation.Builder, rtpmt.network.packet.NetworkMessage.PackageInformation.LocationInformationOrBuilder> locationBuilder_;
      /**
       * <code>optional .rtpmt.network.packet.PackageInformation.LocationInformation location = 4;</code>
       */
      public boolean hasLocation() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .rtpmt.network.packet.PackageInformation.LocationInformation location = 4;</code>
       */
      public rtpmt.network.packet.NetworkMessage.PackageInformation.LocationInformation getLocation() {
        if (locationBuilder_ == null) {
          return location_;
        } else {
          return locationBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .rtpmt.network.packet.PackageInformation.LocationInformation location = 4;</code>
       */
      public Builder setLocation(rtpmt.network.packet.NetworkMessage.PackageInformation.LocationInformation value) {
        if (locationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          location_ = value;
          onChanged();
        } else {
          locationBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .rtpmt.network.packet.PackageInformation.LocationInformation location = 4;</code>
       */
      public Builder setLocation(
            rtpmt.network.packet.NetworkMessage.PackageInformation.LocationInformation.Builder builderForValue) {
        if (locationBuilder_ == null) {
          location_ = builderForValue.build();
          onChanged();
        } else {
          locationBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .rtpmt.network.packet.PackageInformation.LocationInformation location = 4;</code>
       */
      public Builder mergeLocation(rtpmt.network.packet.NetworkMessage.PackageInformation.LocationInformation value) {
        if (locationBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              location_ != rtpmt.network.packet.NetworkMessage.PackageInformation.LocationInformation.getDefaultInstance()) {
            location_ =
                        rtpmt.network.packet.NetworkMessage.PackageInformation.LocationInformation.newBuilder(location_).mergeFrom(value).buildPartial();
          } else {
            location_ = value;
          }
          onChanged();
        } else {
          locationBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .rtpmt.network.packet.PackageInformation.LocationInformation location = 4;</code>
       */
      public Builder clearLocation() {
        if (locationBuilder_ == null) {
          location_ = rtpmt.network.packet.NetworkMessage.PackageInformation.LocationInformation.getDefaultInstance();
          onChanged();
        } else {
          locationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .rtpmt.network.packet.PackageInformation.LocationInformation location = 4;</code>
       */
      public rtpmt.network.packet.NetworkMessage.PackageInformation.LocationInformation.Builder getLocationBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getLocationFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .rtpmt.network.packet.PackageInformation.LocationInformation location = 4;</code>
       */
      public rtpmt.network.packet.NetworkMessage.PackageInformation.LocationInformationOrBuilder getLocationOrBuilder() {
        if (locationBuilder_ != null) {
          return locationBuilder_.getMessageOrBuilder();
        } else {
          return location_;
        }
      }
      /**
       * <code>optional .rtpmt.network.packet.PackageInformation.LocationInformation location = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
            rtpmt.network.packet.NetworkMessage.PackageInformation.LocationInformation, rtpmt.network.packet.NetworkMessage.PackageInformation.LocationInformation.Builder, rtpmt.network.packet.NetworkMessage.PackageInformation.LocationInformationOrBuilder> 
          getLocationFieldBuilder() {
        if (locationBuilder_ == null) {
          locationBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                    rtpmt.network.packet.NetworkMessage.PackageInformation.LocationInformation, rtpmt.network.packet.NetworkMessage.PackageInformation.LocationInformation.Builder, rtpmt.network.packet.NetworkMessage.PackageInformation.LocationInformationOrBuilder>(
                  location_,
                  getParentForChildren(),
                  isClean());
          location_ = null;
        }
        return locationBuilder_;
      }

      // repeated .rtpmt.network.packet.PackageInformation.Sensor sensors = 5;
      private java.util.List<rtpmt.network.packet.NetworkMessage.PackageInformation.Sensor> sensors_ =
        java.util.Collections.emptyList();
      private void ensureSensorsIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          sensors_ = new java.util.ArrayList<rtpmt.network.packet.NetworkMessage.PackageInformation.Sensor>(sensors_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
            rtpmt.network.packet.NetworkMessage.PackageInformation.Sensor, rtpmt.network.packet.NetworkMessage.PackageInformation.Sensor.Builder, rtpmt.network.packet.NetworkMessage.PackageInformation.SensorOrBuilder> sensorsBuilder_;

      /**
       * <code>repeated .rtpmt.network.packet.PackageInformation.Sensor sensors = 5;</code>
       */
      public java.util.List<rtpmt.network.packet.NetworkMessage.PackageInformation.Sensor> getSensorsList() {
        if (sensorsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(sensors_);
        } else {
          return sensorsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .rtpmt.network.packet.PackageInformation.Sensor sensors = 5;</code>
       */
      public int getSensorsCount() {
        if (sensorsBuilder_ == null) {
          return sensors_.size();
        } else {
          return sensorsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .rtpmt.network.packet.PackageInformation.Sensor sensors = 5;</code>
       */
      public rtpmt.network.packet.NetworkMessage.PackageInformation.Sensor getSensors(int index) {
        if (sensorsBuilder_ == null) {
          return sensors_.get(index);
        } else {
          return sensorsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .rtpmt.network.packet.PackageInformation.Sensor sensors = 5;</code>
       */
      public Builder setSensors(
          int index, rtpmt.network.packet.NetworkMessage.PackageInformation.Sensor value) {
        if (sensorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSensorsIsMutable();
          sensors_.set(index, value);
          onChanged();
        } else {
          sensorsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .rtpmt.network.packet.PackageInformation.Sensor sensors = 5;</code>
       */
      public Builder setSensors(
          int index, rtpmt.network.packet.NetworkMessage.PackageInformation.Sensor.Builder builderForValue) {
        if (sensorsBuilder_ == null) {
          ensureSensorsIsMutable();
          sensors_.set(index, builderForValue.build());
          onChanged();
        } else {
          sensorsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .rtpmt.network.packet.PackageInformation.Sensor sensors = 5;</code>
       */
      public Builder addSensors(rtpmt.network.packet.NetworkMessage.PackageInformation.Sensor value) {
        if (sensorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSensorsIsMutable();
          sensors_.add(value);
          onChanged();
        } else {
          sensorsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .rtpmt.network.packet.PackageInformation.Sensor sensors = 5;</code>
       */
      public Builder addSensors(
          int index, rtpmt.network.packet.NetworkMessage.PackageInformation.Sensor value) {
        if (sensorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSensorsIsMutable();
          sensors_.add(index, value);
          onChanged();
        } else {
          sensorsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .rtpmt.network.packet.PackageInformation.Sensor sensors = 5;</code>
       */
      public Builder addSensors(
            rtpmt.network.packet.NetworkMessage.PackageInformation.Sensor.Builder builderForValue) {
        if (sensorsBuilder_ == null) {
          ensureSensorsIsMutable();
          sensors_.add(builderForValue.build());
          onChanged();
        } else {
          sensorsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .rtpmt.network.packet.PackageInformation.Sensor sensors = 5;</code>
       */
      public Builder addSensors(
          int index, rtpmt.network.packet.NetworkMessage.PackageInformation.Sensor.Builder builderForValue) {
        if (sensorsBuilder_ == null) {
          ensureSensorsIsMutable();
          sensors_.add(index, builderForValue.build());
          onChanged();
        } else {
          sensorsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .rtpmt.network.packet.PackageInformation.Sensor sensors = 5;</code>
       */
      public Builder addAllSensors(
          java.lang.Iterable<? extends rtpmt.network.packet.NetworkMessage.PackageInformation.Sensor> values) {
        if (sensorsBuilder_ == null) {
          ensureSensorsIsMutable();
          super.addAll(values, sensors_);
          onChanged();
        } else {
          sensorsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .rtpmt.network.packet.PackageInformation.Sensor sensors = 5;</code>
       */
      public Builder clearSensors() {
        if (sensorsBuilder_ == null) {
          sensors_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          sensorsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .rtpmt.network.packet.PackageInformation.Sensor sensors = 5;</code>
       */
      public Builder removeSensors(int index) {
        if (sensorsBuilder_ == null) {
          ensureSensorsIsMutable();
          sensors_.remove(index);
          onChanged();
        } else {
          sensorsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .rtpmt.network.packet.PackageInformation.Sensor sensors = 5;</code>
       */
      public rtpmt.network.packet.NetworkMessage.PackageInformation.Sensor.Builder getSensorsBuilder(
          int index) {
        return getSensorsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .rtpmt.network.packet.PackageInformation.Sensor sensors = 5;</code>
       */
      public rtpmt.network.packet.NetworkMessage.PackageInformation.SensorOrBuilder getSensorsOrBuilder(
          int index) {
        if (sensorsBuilder_ == null) {
          return sensors_.get(index);  } else {
          return sensorsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .rtpmt.network.packet.PackageInformation.Sensor sensors = 5;</code>
       */
      public java.util.List<? extends rtpmt.network.packet.NetworkMessage.PackageInformation.SensorOrBuilder> 
           getSensorsOrBuilderList() {
        if (sensorsBuilder_ != null) {
          return sensorsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(sensors_);
        }
      }
      /**
       * <code>repeated .rtpmt.network.packet.PackageInformation.Sensor sensors = 5;</code>
       */
      public rtpmt.network.packet.NetworkMessage.PackageInformation.Sensor.Builder addSensorsBuilder() {
        return getSensorsFieldBuilder().addBuilder(
                rtpmt.network.packet.NetworkMessage.PackageInformation.Sensor.getDefaultInstance());
      }
      /**
       * <code>repeated .rtpmt.network.packet.PackageInformation.Sensor sensors = 5;</code>
       */
      public rtpmt.network.packet.NetworkMessage.PackageInformation.Sensor.Builder addSensorsBuilder(
          int index) {
        return getSensorsFieldBuilder().addBuilder(
            index, rtpmt.network.packet.NetworkMessage.PackageInformation.Sensor.getDefaultInstance());
      }
      /**
       * <code>repeated .rtpmt.network.packet.PackageInformation.Sensor sensors = 5;</code>
       */
      public java.util.List<rtpmt.network.packet.NetworkMessage.PackageInformation.Sensor.Builder> 
           getSensorsBuilderList() {
        return getSensorsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
            rtpmt.network.packet.NetworkMessage.PackageInformation.Sensor, rtpmt.network.packet.NetworkMessage.PackageInformation.Sensor.Builder, rtpmt.network.packet.NetworkMessage.PackageInformation.SensorOrBuilder> 
          getSensorsFieldBuilder() {
        if (sensorsBuilder_ == null) {
          sensorsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                    rtpmt.network.packet.NetworkMessage.PackageInformation.Sensor, rtpmt.network.packet.NetworkMessage.PackageInformation.Sensor.Builder, rtpmt.network.packet.NetworkMessage.PackageInformation.SensorOrBuilder>(
                  sensors_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          sensors_ = null;
        }
        return sensorsBuilder_;
      }

      // repeated .rtpmt.network.packet.PackageInformation.Config configs = 6;
      private java.util.List<rtpmt.network.packet.NetworkMessage.PackageInformation.Config> configs_ =
        java.util.Collections.emptyList();
      private void ensureConfigsIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          configs_ = new java.util.ArrayList<rtpmt.network.packet.NetworkMessage.PackageInformation.Config>(configs_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
            rtpmt.network.packet.NetworkMessage.PackageInformation.Config, rtpmt.network.packet.NetworkMessage.PackageInformation.Config.Builder, rtpmt.network.packet.NetworkMessage.PackageInformation.ConfigOrBuilder> configsBuilder_;

      /**
       * <code>repeated .rtpmt.network.packet.PackageInformation.Config configs = 6;</code>
       */
      public java.util.List<rtpmt.network.packet.NetworkMessage.PackageInformation.Config> getConfigsList() {
        if (configsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(configs_);
        } else {
          return configsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .rtpmt.network.packet.PackageInformation.Config configs = 6;</code>
       */
      public int getConfigsCount() {
        if (configsBuilder_ == null) {
          return configs_.size();
        } else {
          return configsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .rtpmt.network.packet.PackageInformation.Config configs = 6;</code>
       */
      public rtpmt.network.packet.NetworkMessage.PackageInformation.Config getConfigs(int index) {
        if (configsBuilder_ == null) {
          return configs_.get(index);
        } else {
          return configsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .rtpmt.network.packet.PackageInformation.Config configs = 6;</code>
       */
      public Builder setConfigs(
          int index, rtpmt.network.packet.NetworkMessage.PackageInformation.Config value) {
        if (configsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureConfigsIsMutable();
          configs_.set(index, value);
          onChanged();
        } else {
          configsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .rtpmt.network.packet.PackageInformation.Config configs = 6;</code>
       */
      public Builder setConfigs(
          int index, rtpmt.network.packet.NetworkMessage.PackageInformation.Config.Builder builderForValue) {
        if (configsBuilder_ == null) {
          ensureConfigsIsMutable();
          configs_.set(index, builderForValue.build());
          onChanged();
        } else {
          configsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .rtpmt.network.packet.PackageInformation.Config configs = 6;</code>
       */
      public Builder addConfigs(rtpmt.network.packet.NetworkMessage.PackageInformation.Config value) {
        if (configsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureConfigsIsMutable();
          configs_.add(value);
          onChanged();
        } else {
          configsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .rtpmt.network.packet.PackageInformation.Config configs = 6;</code>
       */
      public Builder addConfigs(
          int index, rtpmt.network.packet.NetworkMessage.PackageInformation.Config value) {
        if (configsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureConfigsIsMutable();
          configs_.add(index, value);
          onChanged();
        } else {
          configsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .rtpmt.network.packet.PackageInformation.Config configs = 6;</code>
       */
      public Builder addConfigs(
            rtpmt.network.packet.NetworkMessage.PackageInformation.Config.Builder builderForValue) {
        if (configsBuilder_ == null) {
          ensureConfigsIsMutable();
          configs_.add(builderForValue.build());
          onChanged();
        } else {
          configsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .rtpmt.network.packet.PackageInformation.Config configs = 6;</code>
       */
      public Builder addConfigs(
          int index, rtpmt.network.packet.NetworkMessage.PackageInformation.Config.Builder builderForValue) {
        if (configsBuilder_ == null) {
          ensureConfigsIsMutable();
          configs_.add(index, builderForValue.build());
          onChanged();
        } else {
          configsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .rtpmt.network.packet.PackageInformation.Config configs = 6;</code>
       */
      public Builder addAllConfigs(
          java.lang.Iterable<? extends rtpmt.network.packet.NetworkMessage.PackageInformation.Config> values) {
        if (configsBuilder_ == null) {
          ensureConfigsIsMutable();
          super.addAll(values, configs_);
          onChanged();
        } else {
          configsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .rtpmt.network.packet.PackageInformation.Config configs = 6;</code>
       */
      public Builder clearConfigs() {
        if (configsBuilder_ == null) {
          configs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          configsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .rtpmt.network.packet.PackageInformation.Config configs = 6;</code>
       */
      public Builder removeConfigs(int index) {
        if (configsBuilder_ == null) {
          ensureConfigsIsMutable();
          configs_.remove(index);
          onChanged();
        } else {
          configsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .rtpmt.network.packet.PackageInformation.Config configs = 6;</code>
       */
      public rtpmt.network.packet.NetworkMessage.PackageInformation.Config.Builder getConfigsBuilder(
          int index) {
        return getConfigsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .rtpmt.network.packet.PackageInformation.Config configs = 6;</code>
       */
      public rtpmt.network.packet.NetworkMessage.PackageInformation.ConfigOrBuilder getConfigsOrBuilder(
          int index) {
        if (configsBuilder_ == null) {
          return configs_.get(index);  } else {
          return configsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .rtpmt.network.packet.PackageInformation.Config configs = 6;</code>
       */
      public java.util.List<? extends rtpmt.network.packet.NetworkMessage.PackageInformation.ConfigOrBuilder> 
           getConfigsOrBuilderList() {
        if (configsBuilder_ != null) {
          return configsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(configs_);
        }
      }
      /**
       * <code>repeated .rtpmt.network.packet.PackageInformation.Config configs = 6;</code>
       */
      public rtpmt.network.packet.NetworkMessage.PackageInformation.Config.Builder addConfigsBuilder() {
        return getConfigsFieldBuilder().addBuilder(
                rtpmt.network.packet.NetworkMessage.PackageInformation.Config.getDefaultInstance());
      }
      /**
       * <code>repeated .rtpmt.network.packet.PackageInformation.Config configs = 6;</code>
       */
      public rtpmt.network.packet.NetworkMessage.PackageInformation.Config.Builder addConfigsBuilder(
          int index) {
        return getConfigsFieldBuilder().addBuilder(
            index, rtpmt.network.packet.NetworkMessage.PackageInformation.Config.getDefaultInstance());
      }
      /**
       * <code>repeated .rtpmt.network.packet.PackageInformation.Config configs = 6;</code>
       */
      public java.util.List<rtpmt.network.packet.NetworkMessage.PackageInformation.Config.Builder> 
           getConfigsBuilderList() {
        return getConfigsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
            rtpmt.network.packet.NetworkMessage.PackageInformation.Config, rtpmt.network.packet.NetworkMessage.PackageInformation.Config.Builder, rtpmt.network.packet.NetworkMessage.PackageInformation.ConfigOrBuilder> 
          getConfigsFieldBuilder() {
        if (configsBuilder_ == null) {
          configsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                    rtpmt.network.packet.NetworkMessage.PackageInformation.Config, rtpmt.network.packet.NetworkMessage.PackageInformation.Config.Builder, rtpmt.network.packet.NetworkMessage.PackageInformation.ConfigOrBuilder>(
                  configs_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          configs_ = null;
        }
        return configsBuilder_;
      }

      // required uint64 timeStamp = 7;
      private long timeStamp_ ;
      /**
       * <code>required uint64 timeStamp = 7;</code>
       */
      public boolean hasTimeStamp() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required uint64 timeStamp = 7;</code>
       */
      public long getTimeStamp() {
        return timeStamp_;
      }
      /**
       * <code>required uint64 timeStamp = 7;</code>
       */
      public Builder setTimeStamp(long value) {
        bitField0_ |= 0x00000040;
        timeStamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 timeStamp = 7;</code>
       */
      public Builder clearTimeStamp() {
        bitField0_ = (bitField0_ & ~0x00000040);
        timeStamp_ = 0L;
        onChanged();
        return this;
      }

      // required .rtpmt.network.packet.PackageInformation.MessageType messageType = 8;
      private rtpmt.network.packet.NetworkMessage.PackageInformation.MessageType messageType_ = rtpmt.network.packet.NetworkMessage.PackageInformation.MessageType.CONFIG;
      /**
       * <code>required .rtpmt.network.packet.PackageInformation.MessageType messageType = 8;</code>
       */
      public boolean hasMessageType() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required .rtpmt.network.packet.PackageInformation.MessageType messageType = 8;</code>
       */
      public rtpmt.network.packet.NetworkMessage.PackageInformation.MessageType getMessageType() {
        return messageType_;
      }
      /**
       * <code>required .rtpmt.network.packet.PackageInformation.MessageType messageType = 8;</code>
       */
      public Builder setMessageType(rtpmt.network.packet.NetworkMessage.PackageInformation.MessageType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000080;
        messageType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .rtpmt.network.packet.PackageInformation.MessageType messageType = 8;</code>
       */
      public Builder clearMessageType() {
        bitField0_ = (bitField0_ & ~0x00000080);
        messageType_ = rtpmt.network.packet.NetworkMessage.PackageInformation.MessageType.CONFIG;
        onChanged();
        return this;
      }

      // required bool isRealTime = 9;
      private boolean isRealTime_ ;
      /**
       * <code>required bool isRealTime = 9;</code>
       */
      public boolean hasIsRealTime() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>required bool isRealTime = 9;</code>
       */
      public boolean getIsRealTime() {
        return isRealTime_;
      }
      /**
       * <code>required bool isRealTime = 9;</code>
       */
      public Builder setIsRealTime(boolean value) {
        bitField0_ |= 0x00000100;
        isRealTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool isRealTime = 9;</code>
       */
      public Builder clearIsRealTime() {
        bitField0_ = (bitField0_ & ~0x00000100);
        isRealTime_ = false;
        onChanged();
        return this;
      }

      // optional string comments = 10;
      private java.lang.Object comments_ = "";
      /**
       * <code>optional string comments = 10;</code>
       */
      public boolean hasComments() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional string comments = 10;</code>
       */
      public java.lang.String getComments() {
        java.lang.Object ref = comments_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          comments_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string comments = 10;</code>
       */
      public com.google.protobuf.ByteString
          getCommentsBytes() {
        java.lang.Object ref = comments_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          comments_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string comments = 10;</code>
       */
      public Builder setComments(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        comments_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string comments = 10;</code>
       */
      public Builder clearComments() {
        bitField0_ = (bitField0_ & ~0x00000200);
        comments_ = getDefaultInstance().getComments();
        onChanged();
        return this;
      }
      /**
       * <code>optional string comments = 10;</code>
       */
      public Builder setCommentsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        comments_ = value;
        onChanged();
        return this;
      }

      // optional bool isAboveThreshold = 11;
      private boolean isAboveThreshold_ ;
      /**
       * <code>optional bool isAboveThreshold = 11;</code>
       */
      public boolean hasIsAboveThreshold() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional bool isAboveThreshold = 11;</code>
       */
      public boolean getIsAboveThreshold() {
        return isAboveThreshold_;
      }
      /**
       * <code>optional bool isAboveThreshold = 11;</code>
       */
      public Builder setIsAboveThreshold(boolean value) {
        bitField0_ |= 0x00000400;
        isAboveThreshold_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool isAboveThreshold = 11;</code>
       */
      public Builder clearIsAboveThreshold() {
        bitField0_ = (bitField0_ & ~0x00000400);
        isAboveThreshold_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:rtpmt.network.packet.PackageInformation)
    }

    static {
      defaultInstance = new PackageInformation(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:rtpmt.network.packet.PackageInformation)
  }

  public interface PackagesOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .rtpmt.network.packet.PackageInformation packageInfo = 1;
    /**
     * <code>repeated .rtpmt.network.packet.PackageInformation packageInfo = 1;</code>
     */
    java.util.List<rtpmt.network.packet.NetworkMessage.PackageInformation> 
        getPackageInfoList();
    /**
     * <code>repeated .rtpmt.network.packet.PackageInformation packageInfo = 1;</code>
     */
        rtpmt.network.packet.NetworkMessage.PackageInformation getPackageInfo(int index);
    /**
     * <code>repeated .rtpmt.network.packet.PackageInformation packageInfo = 1;</code>
     */
    int getPackageInfoCount();
    /**
     * <code>repeated .rtpmt.network.packet.PackageInformation packageInfo = 1;</code>
     */
    java.util.List<? extends rtpmt.network.packet.NetworkMessage.PackageInformationOrBuilder> 
        getPackageInfoOrBuilderList();
    /**
     * <code>repeated .rtpmt.network.packet.PackageInformation packageInfo = 1;</code>
     */
        rtpmt.network.packet.NetworkMessage.PackageInformationOrBuilder getPackageInfoOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code rtpmt.network.packet.Packages}
   *
   * <pre>
   *Packages have list package information.
   * This is used to store the information in a file and retrieve effectively
   * </pre>
   */
  public static final class Packages extends
      com.google.protobuf.GeneratedMessage
      implements PackagesOrBuilder {
    // Use Packages.newBuilder() to construct.
    private Packages(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Packages(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Packages defaultInstance;
    public static Packages getDefaultInstance() {
      return defaultInstance;
    }

    public Packages getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Packages(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                packageInfo_ = new java.util.ArrayList<rtpmt.network.packet.NetworkMessage.PackageInformation>();
                mutable_bitField0_ |= 0x00000001;
              }
              packageInfo_.add(input.readMessage(rtpmt.network.packet.NetworkMessage.PackageInformation.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          packageInfo_ = java.util.Collections.unmodifiableList(packageInfo_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return rtpmt.network.packet.NetworkMessage.internal_static_rtpmt_network_packet_Packages_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return rtpmt.network.packet.NetworkMessage.internal_static_rtpmt_network_packet_Packages_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              rtpmt.network.packet.NetworkMessage.Packages.class, rtpmt.network.packet.NetworkMessage.Packages.Builder.class);
    }

    public static com.google.protobuf.Parser<Packages> PARSER =
        new com.google.protobuf.AbstractParser<Packages>() {
      public Packages parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Packages(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Packages> getParserForType() {
      return PARSER;
    }

    // repeated .rtpmt.network.packet.PackageInformation packageInfo = 1;
    public static final int PACKAGEINFO_FIELD_NUMBER = 1;
    private java.util.List<rtpmt.network.packet.NetworkMessage.PackageInformation> packageInfo_;
    /**
     * <code>repeated .rtpmt.network.packet.PackageInformation packageInfo = 1;</code>
     */
    public java.util.List<rtpmt.network.packet.NetworkMessage.PackageInformation> getPackageInfoList() {
      return packageInfo_;
    }
    /**
     * <code>repeated .rtpmt.network.packet.PackageInformation packageInfo = 1;</code>
     */
    public java.util.List<? extends rtpmt.network.packet.NetworkMessage.PackageInformationOrBuilder> 
        getPackageInfoOrBuilderList() {
      return packageInfo_;
    }
    /**
     * <code>repeated .rtpmt.network.packet.PackageInformation packageInfo = 1;</code>
     */
    public int getPackageInfoCount() {
      return packageInfo_.size();
    }
    /**
     * <code>repeated .rtpmt.network.packet.PackageInformation packageInfo = 1;</code>
     */
    public rtpmt.network.packet.NetworkMessage.PackageInformation getPackageInfo(int index) {
      return packageInfo_.get(index);
    }
    /**
     * <code>repeated .rtpmt.network.packet.PackageInformation packageInfo = 1;</code>
     */
    public rtpmt.network.packet.NetworkMessage.PackageInformationOrBuilder getPackageInfoOrBuilder(
        int index) {
      return packageInfo_.get(index);
    }

    private void initFields() {
      packageInfo_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getPackageInfoCount(); i++) {
        if (!getPackageInfo(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < packageInfo_.size(); i++) {
        output.writeMessage(1, packageInfo_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < packageInfo_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, packageInfo_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static rtpmt.network.packet.NetworkMessage.Packages parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rtpmt.network.packet.NetworkMessage.Packages parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rtpmt.network.packet.NetworkMessage.Packages parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rtpmt.network.packet.NetworkMessage.Packages parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rtpmt.network.packet.NetworkMessage.Packages parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static rtpmt.network.packet.NetworkMessage.Packages parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static rtpmt.network.packet.NetworkMessage.Packages parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static rtpmt.network.packet.NetworkMessage.Packages parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static rtpmt.network.packet.NetworkMessage.Packages parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static rtpmt.network.packet.NetworkMessage.Packages parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(rtpmt.network.packet.NetworkMessage.Packages prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code rtpmt.network.packet.Packages}
     *
     * <pre>
     *Packages have list package information.
     * This is used to store the information in a file and retrieve effectively
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements rtpmt.network.packet.NetworkMessage.PackagesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return  rtpmt.network.packet.NetworkMessage.internal_static_rtpmt_network_packet_Packages_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return  rtpmt.network.packet.NetworkMessage.internal_static_rtpmt_network_packet_Packages_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                rtpmt.network.packet.NetworkMessage.Packages.class, rtpmt.network.packet.NetworkMessage.Packages.Builder.class);
      }

      // Construct using rtpmt.network.packet.NetworkMessage.Packages.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPackageInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (packageInfoBuilder_ == null) {
          packageInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          packageInfoBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return  rtpmt.network.packet.NetworkMessage.internal_static_rtpmt_network_packet_Packages_descriptor;
      }

      public rtpmt.network.packet.NetworkMessage.Packages getDefaultInstanceForType() {
        return  rtpmt.network.packet.NetworkMessage.Packages.getDefaultInstance();
      }

      public rtpmt.network.packet.NetworkMessage.Packages build() {
                rtpmt.network.packet.NetworkMessage.Packages result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public rtpmt.network.packet.NetworkMessage.Packages buildPartial() {
                rtpmt.network.packet.NetworkMessage.Packages result = new rtpmt.network.packet.NetworkMessage.Packages(this);
        int from_bitField0_ = bitField0_;
        if (packageInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            packageInfo_ = java.util.Collections.unmodifiableList(packageInfo_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.packageInfo_ = packageInfo_;
        } else {
          result.packageInfo_ = packageInfoBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof rtpmt.network.packet.NetworkMessage.Packages) {
          return mergeFrom((rtpmt.network.packet.NetworkMessage.Packages)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(rtpmt.network.packet.NetworkMessage.Packages other) {
        if (other == rtpmt.network.packet.NetworkMessage.Packages.getDefaultInstance()) return this;
        if (packageInfoBuilder_ == null) {
          if (!other.packageInfo_.isEmpty()) {
            if (packageInfo_.isEmpty()) {
              packageInfo_ = other.packageInfo_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensurePackageInfoIsMutable();
              packageInfo_.addAll(other.packageInfo_);
            }
            onChanged();
          }
        } else {
          if (!other.packageInfo_.isEmpty()) {
            if (packageInfoBuilder_.isEmpty()) {
              packageInfoBuilder_.dispose();
              packageInfoBuilder_ = null;
              packageInfo_ = other.packageInfo_;
              bitField0_ = (bitField0_ & ~0x00000001);
              packageInfoBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPackageInfoFieldBuilder() : null;
            } else {
              packageInfoBuilder_.addAllMessages(other.packageInfo_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getPackageInfoCount(); i++) {
          if (!getPackageInfo(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
                rtpmt.network.packet.NetworkMessage.Packages parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (rtpmt.network.packet.NetworkMessage.Packages) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .rtpmt.network.packet.PackageInformation packageInfo = 1;
      private java.util.List<rtpmt.network.packet.NetworkMessage.PackageInformation> packageInfo_ =
        java.util.Collections.emptyList();
      private void ensurePackageInfoIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          packageInfo_ = new java.util.ArrayList<rtpmt.network.packet.NetworkMessage.PackageInformation>(packageInfo_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
            rtpmt.network.packet.NetworkMessage.PackageInformation, rtpmt.network.packet.NetworkMessage.PackageInformation.Builder, rtpmt.network.packet.NetworkMessage.PackageInformationOrBuilder> packageInfoBuilder_;

      /**
       * <code>repeated .rtpmt.network.packet.PackageInformation packageInfo = 1;</code>
       */
      public java.util.List<rtpmt.network.packet.NetworkMessage.PackageInformation> getPackageInfoList() {
        if (packageInfoBuilder_ == null) {
          return java.util.Collections.unmodifiableList(packageInfo_);
        } else {
          return packageInfoBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .rtpmt.network.packet.PackageInformation packageInfo = 1;</code>
       */
      public int getPackageInfoCount() {
        if (packageInfoBuilder_ == null) {
          return packageInfo_.size();
        } else {
          return packageInfoBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .rtpmt.network.packet.PackageInformation packageInfo = 1;</code>
       */
      public rtpmt.network.packet.NetworkMessage.PackageInformation getPackageInfo(int index) {
        if (packageInfoBuilder_ == null) {
          return packageInfo_.get(index);
        } else {
          return packageInfoBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .rtpmt.network.packet.PackageInformation packageInfo = 1;</code>
       */
      public Builder setPackageInfo(
          int index, rtpmt.network.packet.NetworkMessage.PackageInformation value) {
        if (packageInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePackageInfoIsMutable();
          packageInfo_.set(index, value);
          onChanged();
        } else {
          packageInfoBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .rtpmt.network.packet.PackageInformation packageInfo = 1;</code>
       */
      public Builder setPackageInfo(
          int index, rtpmt.network.packet.NetworkMessage.PackageInformation.Builder builderForValue) {
        if (packageInfoBuilder_ == null) {
          ensurePackageInfoIsMutable();
          packageInfo_.set(index, builderForValue.build());
          onChanged();
        } else {
          packageInfoBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .rtpmt.network.packet.PackageInformation packageInfo = 1;</code>
       */
      public Builder addPackageInfo(rtpmt.network.packet.NetworkMessage.PackageInformation value) {
        if (packageInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePackageInfoIsMutable();
          packageInfo_.add(value);
          onChanged();
        } else {
          packageInfoBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .rtpmt.network.packet.PackageInformation packageInfo = 1;</code>
       */
      public Builder addPackageInfo(
          int index, rtpmt.network.packet.NetworkMessage.PackageInformation value) {
        if (packageInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePackageInfoIsMutable();
          packageInfo_.add(index, value);
          onChanged();
        } else {
          packageInfoBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .rtpmt.network.packet.PackageInformation packageInfo = 1;</code>
       */
      public Builder addPackageInfo(
            rtpmt.network.packet.NetworkMessage.PackageInformation.Builder builderForValue) {
        if (packageInfoBuilder_ == null) {
          ensurePackageInfoIsMutable();
          packageInfo_.add(builderForValue.build());
          onChanged();
        } else {
          packageInfoBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .rtpmt.network.packet.PackageInformation packageInfo = 1;</code>
       */
      public Builder addPackageInfo(
          int index, rtpmt.network.packet.NetworkMessage.PackageInformation.Builder builderForValue) {
        if (packageInfoBuilder_ == null) {
          ensurePackageInfoIsMutable();
          packageInfo_.add(index, builderForValue.build());
          onChanged();
        } else {
          packageInfoBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .rtpmt.network.packet.PackageInformation packageInfo = 1;</code>
       */
      public Builder addAllPackageInfo(
          java.lang.Iterable<? extends rtpmt.network.packet.NetworkMessage.PackageInformation> values) {
        if (packageInfoBuilder_ == null) {
          ensurePackageInfoIsMutable();
          super.addAll(values, packageInfo_);
          onChanged();
        } else {
          packageInfoBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .rtpmt.network.packet.PackageInformation packageInfo = 1;</code>
       */
      public Builder clearPackageInfo() {
        if (packageInfoBuilder_ == null) {
          packageInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          packageInfoBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .rtpmt.network.packet.PackageInformation packageInfo = 1;</code>
       */
      public Builder removePackageInfo(int index) {
        if (packageInfoBuilder_ == null) {
          ensurePackageInfoIsMutable();
          packageInfo_.remove(index);
          onChanged();
        } else {
          packageInfoBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .rtpmt.network.packet.PackageInformation packageInfo = 1;</code>
       */
      public rtpmt.network.packet.NetworkMessage.PackageInformation.Builder getPackageInfoBuilder(
          int index) {
        return getPackageInfoFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .rtpmt.network.packet.PackageInformation packageInfo = 1;</code>
       */
      public rtpmt.network.packet.NetworkMessage.PackageInformationOrBuilder getPackageInfoOrBuilder(
          int index) {
        if (packageInfoBuilder_ == null) {
          return packageInfo_.get(index);  } else {
          return packageInfoBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .rtpmt.network.packet.PackageInformation packageInfo = 1;</code>
       */
      public java.util.List<? extends rtpmt.network.packet.NetworkMessage.PackageInformationOrBuilder> 
           getPackageInfoOrBuilderList() {
        if (packageInfoBuilder_ != null) {
          return packageInfoBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(packageInfo_);
        }
      }
      /**
       * <code>repeated .rtpmt.network.packet.PackageInformation packageInfo = 1;</code>
       */
      public rtpmt.network.packet.NetworkMessage.PackageInformation.Builder addPackageInfoBuilder() {
        return getPackageInfoFieldBuilder().addBuilder(
                rtpmt.network.packet.NetworkMessage.PackageInformation.getDefaultInstance());
      }
      /**
       * <code>repeated .rtpmt.network.packet.PackageInformation packageInfo = 1;</code>
       */
      public rtpmt.network.packet.NetworkMessage.PackageInformation.Builder addPackageInfoBuilder(
          int index) {
        return getPackageInfoFieldBuilder().addBuilder(
            index, rtpmt.network.packet.NetworkMessage.PackageInformation.getDefaultInstance());
      }
      /**
       * <code>repeated .rtpmt.network.packet.PackageInformation packageInfo = 1;</code>
       */
      public java.util.List<rtpmt.network.packet.NetworkMessage.PackageInformation.Builder> 
           getPackageInfoBuilderList() {
        return getPackageInfoFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
            rtpmt.network.packet.NetworkMessage.PackageInformation, rtpmt.network.packet.NetworkMessage.PackageInformation.Builder, rtpmt.network.packet.NetworkMessage.PackageInformationOrBuilder> 
          getPackageInfoFieldBuilder() {
        if (packageInfoBuilder_ == null) {
          packageInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                    rtpmt.network.packet.NetworkMessage.PackageInformation, rtpmt.network.packet.NetworkMessage.PackageInformation.Builder, rtpmt.network.packet.NetworkMessage.PackageInformationOrBuilder>(
                  packageInfo_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          packageInfo_ = null;
        }
        return packageInfoBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:rtpmt.network.packet.Packages)
    }

    static {
      defaultInstance = new Packages(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:rtpmt.network.packet.Packages)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_rtpmt_network_packet_PackageInformation_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_rtpmt_network_packet_PackageInformation_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_rtpmt_network_packet_PackageInformation_LocationInformation_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_rtpmt_network_packet_PackageInformation_LocationInformation_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_rtpmt_network_packet_PackageInformation_Sensor_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_rtpmt_network_packet_PackageInformation_Sensor_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_rtpmt_network_packet_PackageInformation_Config_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_rtpmt_network_packet_PackageInformation_Config_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_rtpmt_network_packet_Packages_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_rtpmt_network_packet_Packages_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\024NetworkMessage.proto\022\024rtpmt.network.pa" +
      "cket\"\362\007\n\022PackageInformation\022\020\n\010sensorId\030" +
      "\001 \002(\t\022\021\n\tpackageId\030\002 \002(\t\022\017\n\007truckId\030\003 \001(" +
      "\t\022N\n\010location\030\004 \001(\0132<.rtpmt.network.pack" +
      "et.PackageInformation.LocationInformatio" +
      "n\022@\n\007sensors\030\005 \003(\0132/.rtpmt.network.packe" +
      "t.PackageInformation.Sensor\022@\n\007configs\030\006" +
      " \003(\0132/.rtpmt.network.packet.PackageInfor" +
      "mation.Config\022\021\n\ttimeStamp\030\007 \002(\004\022I\n\013mess" +
      "ageType\030\010 \002(\01624.rtpmt.network.packet.Pac",
      "kageInformation.MessageType\022\022\n\nisRealTim" +
      "e\030\t \002(\010\022\020\n\010comments\030\n \001(\t\022\030\n\020isAboveThre" +
      "shold\030\013 \001(\010\032:\n\023LocationInformation\022\020\n\010la" +
      "titude\030\001 \002(\001\022\021\n\tlongitude\030\002 \002(\001\032\207\001\n\006Sens" +
      "or\022T\n\nsensorType\030\001 \002(\01623.rtpmt.network.p" +
      "acket.PackageInformation.SensorType:\013TEM" +
      "PERATURE\022\023\n\013sensorValue\030\002 \002(\t\022\022\n\nsensorU" +
      "nit\030\003 \002(\t\032\300\001\n\006Config\022T\n\nsensorType\030\001 \002(\016" +
      "23.rtpmt.network.packet.PackageInformati" +
      "on.SensorType:\013TEMPERATURE\022\024\n\014maxThresho",
      "ld\030\002 \002(\001\022\024\n\014minThreshold\030\003 \001(\001\022\022\n\ntimePe" +
      "riod\030\004 \001(\005\022 \n\030timePeriodAfterThreshold\030\005" +
      " \002(\005\"\177\n\nSensorType\022\017\n\013TEMPERATURE\020\000\022\014\n\010H" +
      "UMIDITY\020\001\022\016\n\nVIBRATIONX\020\002\022\016\n\nVIBRATIONY\020" +
      "\003\022\016\n\nVIBRATIONZ\020\004\022\n\n\006SHOCKX\020\005\022\n\n\006SHOCKY\020" +
      "\006\022\n\n\006SHOCKZ\020\007\"*\n\013MessageType\022\n\n\006CONFIG\020\000" +
      "\022\017\n\013SENSOR_INFO\020\001\"I\n\010Packages\022=\n\013package" +
      "Info\030\001 \003(\0132(.rtpmt.network.packet.Packag" +
      "eInformationB&\n\024rtpmt.network.packetB\016Ne" +
      "tworkMessage"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_rtpmt_network_packet_PackageInformation_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_rtpmt_network_packet_PackageInformation_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_rtpmt_network_packet_PackageInformation_descriptor,
              new java.lang.String[] { "SensorId", "PackageId", "TruckId", "Location", "Sensors", "Configs", "TimeStamp", "MessageType", "IsRealTime", "Comments", "IsAboveThreshold", });
          internal_static_rtpmt_network_packet_PackageInformation_LocationInformation_descriptor =
            internal_static_rtpmt_network_packet_PackageInformation_descriptor.getNestedTypes().get(0);
          internal_static_rtpmt_network_packet_PackageInformation_LocationInformation_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_rtpmt_network_packet_PackageInformation_LocationInformation_descriptor,
              new java.lang.String[] { "Latitude", "Longitude", });
          internal_static_rtpmt_network_packet_PackageInformation_Sensor_descriptor =
            internal_static_rtpmt_network_packet_PackageInformation_descriptor.getNestedTypes().get(1);
          internal_static_rtpmt_network_packet_PackageInformation_Sensor_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_rtpmt_network_packet_PackageInformation_Sensor_descriptor,
              new java.lang.String[] { "SensorType", "SensorValue", "SensorUnit", });
          internal_static_rtpmt_network_packet_PackageInformation_Config_descriptor =
            internal_static_rtpmt_network_packet_PackageInformation_descriptor.getNestedTypes().get(2);
          internal_static_rtpmt_network_packet_PackageInformation_Config_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_rtpmt_network_packet_PackageInformation_Config_descriptor,
              new java.lang.String[] { "SensorType", "MaxThreshold", "MinThreshold", "TimePeriod", "TimePeriodAfterThreshold", });
          internal_static_rtpmt_network_packet_Packages_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_rtpmt_network_packet_Packages_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_rtpmt_network_packet_Packages_descriptor,
              new java.lang.String[] { "PackageInfo", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}

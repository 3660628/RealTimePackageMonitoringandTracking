// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SensorInformation.proto

package rtpmt.network.packet;

public final class SensorMessage {
  private SensorMessage() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface SensorInformationOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string deviceId = 1;
    /**
     * <code>required string deviceId = 1;</code>
     */
    boolean hasDeviceId();
    /**
     * <code>required string deviceId = 1;</code>
     */
    java.lang.String getDeviceId();
    /**
     * <code>required string deviceId = 1;</code>
     */
    com.google.protobuf.ByteString
        getDeviceIdBytes();

    // required string timeStamp = 2;
    /**
     * <code>required string timeStamp = 2;</code>
     */
    boolean hasTimeStamp();
    /**
     * <code>required string timeStamp = 2;</code>
     */
    java.lang.String getTimeStamp();
    /**
     * <code>required string timeStamp = 2;</code>
     */
    com.google.protobuf.ByteString
        getTimeStampBytes();

    // required .rtpmt.network.packet.SensorInformation.LocationInformation location = 3;
    /**
     * <code>required .rtpmt.network.packet.SensorInformation.LocationInformation location = 3;</code>
     */
    boolean hasLocation();
    /**
     * <code>required .rtpmt.network.packet.SensorInformation.LocationInformation location = 3;</code>
     */
    rtpmt.network.packet.SensorMessage.SensorInformation.LocationInformation getLocation();
    /**
     * <code>required .rtpmt.network.packet.SensorInformation.LocationInformation location = 3;</code>
     */
    rtpmt.network.packet.SensorMessage.SensorInformation.LocationInformationOrBuilder getLocationOrBuilder();

    // repeated .rtpmt.network.packet.SensorInformation.Sensor sensors = 4;
    /**
     * <code>repeated .rtpmt.network.packet.SensorInformation.Sensor sensors = 4;</code>
     */
    java.util.List<rtpmt.network.packet.SensorMessage.SensorInformation.Sensor> 
        getSensorsList();
    /**
     * <code>repeated .rtpmt.network.packet.SensorInformation.Sensor sensors = 4;</code>
     */
    rtpmt.network.packet.SensorMessage.SensorInformation.Sensor getSensors(int index);
    /**
     * <code>repeated .rtpmt.network.packet.SensorInformation.Sensor sensors = 4;</code>
     */
    int getSensorsCount();
    /**
     * <code>repeated .rtpmt.network.packet.SensorInformation.Sensor sensors = 4;</code>
     */
    java.util.List<? extends rtpmt.network.packet.SensorMessage.SensorInformation.SensorOrBuilder> 
        getSensorsOrBuilderList();
    /**
     * <code>repeated .rtpmt.network.packet.SensorInformation.Sensor sensors = 4;</code>
     */
    rtpmt.network.packet.SensorMessage.SensorInformation.SensorOrBuilder getSensorsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code rtpmt.network.packet.SensorInformation}
   */
  public static final class SensorInformation extends
      com.google.protobuf.GeneratedMessage
      implements SensorInformationOrBuilder {
    // Use SensorInformation.newBuilder() to construct.
    private SensorInformation(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SensorInformation(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SensorInformation defaultInstance;
    public static SensorInformation getDefaultInstance() {
      return defaultInstance;
    }

    public SensorInformation getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SensorInformation(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              deviceId_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              timeStamp_ = input.readBytes();
              break;
            }
            case 26: {
              rtpmt.network.packet.SensorMessage.SensorInformation.LocationInformation.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = location_.toBuilder();
              }
              location_ = input.readMessage(rtpmt.network.packet.SensorMessage.SensorInformation.LocationInformation.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(location_);
                location_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                sensors_ = new java.util.ArrayList<rtpmt.network.packet.SensorMessage.SensorInformation.Sensor>();
                mutable_bitField0_ |= 0x00000008;
              }
              sensors_.add(input.readMessage(rtpmt.network.packet.SensorMessage.SensorInformation.Sensor.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          sensors_ = java.util.Collections.unmodifiableList(sensors_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return rtpmt.network.packet.SensorMessage.internal_static_rtpmt_network_packet_SensorInformation_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return rtpmt.network.packet.SensorMessage.internal_static_rtpmt_network_packet_SensorInformation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              rtpmt.network.packet.SensorMessage.SensorInformation.class, rtpmt.network.packet.SensorMessage.SensorInformation.Builder.class);
    }

    public static com.google.protobuf.Parser<SensorInformation> PARSER =
        new com.google.protobuf.AbstractParser<SensorInformation>() {
      public SensorInformation parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SensorInformation(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SensorInformation> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code rtpmt.network.packet.SensorInformation.SensorType}
     */
    public enum SensorType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>TEMPERATURE = 0;</code>
       */
      TEMPERATURE(0, 0),
      /**
       * <code>VIBRATION = 1;</code>
       */
      VIBRATION(1, 1),
      /**
       * <code>HUMIDITY = 2;</code>
       */
      HUMIDITY(2, 2),
      /**
       * <code>SHOCK = 3;</code>
       */
      SHOCK(3, 3),
      ;

      /**
       * <code>TEMPERATURE = 0;</code>
       */
      public static final int TEMPERATURE_VALUE = 0;
      /**
       * <code>VIBRATION = 1;</code>
       */
      public static final int VIBRATION_VALUE = 1;
      /**
       * <code>HUMIDITY = 2;</code>
       */
      public static final int HUMIDITY_VALUE = 2;
      /**
       * <code>SHOCK = 3;</code>
       */
      public static final int SHOCK_VALUE = 3;


      public final int getNumber() { return value; }

      public static SensorType valueOf(int value) {
        switch (value) {
          case 0: return TEMPERATURE;
          case 1: return VIBRATION;
          case 2: return HUMIDITY;
          case 3: return SHOCK;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<SensorType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<SensorType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<SensorType>() {
              public SensorType findValueByNumber(int number) {
                return SensorType.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return rtpmt.network.packet.SensorMessage.SensorInformation.getDescriptor().getEnumTypes().get(0);
      }

      private static final SensorType[] VALUES = values();

      public static SensorType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private SensorType(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:rtpmt.network.packet.SensorInformation.SensorType)
    }

    public interface LocationInformationOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // required double latitude = 1;
      /**
       * <code>required double latitude = 1;</code>
       */
      boolean hasLatitude();
      /**
       * <code>required double latitude = 1;</code>
       */
      double getLatitude();

      // required double longitude = 2;
      /**
       * <code>required double longitude = 2;</code>
       */
      boolean hasLongitude();
      /**
       * <code>required double longitude = 2;</code>
       */
      double getLongitude();
    }
    /**
     * Protobuf type {@code rtpmt.network.packet.SensorInformation.LocationInformation}
     */
    public static final class LocationInformation extends
        com.google.protobuf.GeneratedMessage
        implements LocationInformationOrBuilder {
      // Use LocationInformation.newBuilder() to construct.
      private LocationInformation(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private LocationInformation(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final LocationInformation defaultInstance;
      public static LocationInformation getDefaultInstance() {
        return defaultInstance;
      }

      public LocationInformation getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private LocationInformation(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 9: {
                bitField0_ |= 0x00000001;
                latitude_ = input.readDouble();
                break;
              }
              case 17: {
                bitField0_ |= 0x00000002;
                longitude_ = input.readDouble();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return rtpmt.network.packet.SensorMessage.internal_static_rtpmt_network_packet_SensorInformation_LocationInformation_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return rtpmt.network.packet.SensorMessage.internal_static_rtpmt_network_packet_SensorInformation_LocationInformation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                rtpmt.network.packet.SensorMessage.SensorInformation.LocationInformation.class, rtpmt.network.packet.SensorMessage.SensorInformation.LocationInformation.Builder.class);
      }

      public static com.google.protobuf.Parser<LocationInformation> PARSER =
          new com.google.protobuf.AbstractParser<LocationInformation>() {
        public LocationInformation parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new LocationInformation(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<LocationInformation> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // required double latitude = 1;
      public static final int LATITUDE_FIELD_NUMBER = 1;
      private double latitude_;
      /**
       * <code>required double latitude = 1;</code>
       */
      public boolean hasLatitude() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required double latitude = 1;</code>
       */
      public double getLatitude() {
        return latitude_;
      }

      // required double longitude = 2;
      public static final int LONGITUDE_FIELD_NUMBER = 2;
      private double longitude_;
      /**
       * <code>required double longitude = 2;</code>
       */
      public boolean hasLongitude() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required double longitude = 2;</code>
       */
      public double getLongitude() {
        return longitude_;
      }

      private void initFields() {
        latitude_ = 0D;
        longitude_ = 0D;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasLatitude()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasLongitude()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeDouble(1, latitude_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeDouble(2, longitude_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(1, latitude_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(2, longitude_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static rtpmt.network.packet.SensorMessage.SensorInformation.LocationInformation parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static rtpmt.network.packet.SensorMessage.SensorInformation.LocationInformation parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static rtpmt.network.packet.SensorMessage.SensorInformation.LocationInformation parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static rtpmt.network.packet.SensorMessage.SensorInformation.LocationInformation parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static rtpmt.network.packet.SensorMessage.SensorInformation.LocationInformation parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static rtpmt.network.packet.SensorMessage.SensorInformation.LocationInformation parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static rtpmt.network.packet.SensorMessage.SensorInformation.LocationInformation parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static rtpmt.network.packet.SensorMessage.SensorInformation.LocationInformation parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static rtpmt.network.packet.SensorMessage.SensorInformation.LocationInformation parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static rtpmt.network.packet.SensorMessage.SensorInformation.LocationInformation parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(rtpmt.network.packet.SensorMessage.SensorInformation.LocationInformation prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code rtpmt.network.packet.SensorInformation.LocationInformation}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements rtpmt.network.packet.SensorMessage.SensorInformation.LocationInformationOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return rtpmt.network.packet.SensorMessage.internal_static_rtpmt_network_packet_SensorInformation_LocationInformation_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return rtpmt.network.packet.SensorMessage.internal_static_rtpmt_network_packet_SensorInformation_LocationInformation_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  rtpmt.network.packet.SensorMessage.SensorInformation.LocationInformation.class, rtpmt.network.packet.SensorMessage.SensorInformation.LocationInformation.Builder.class);
        }

        // Construct using rtpmt.network.packet.SensorMessage.SensorInformation.LocationInformation.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          latitude_ = 0D;
          bitField0_ = (bitField0_ & ~0x00000001);
          longitude_ = 0D;
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return rtpmt.network.packet.SensorMessage.internal_static_rtpmt_network_packet_SensorInformation_LocationInformation_descriptor;
        }

        public rtpmt.network.packet.SensorMessage.SensorInformation.LocationInformation getDefaultInstanceForType() {
          return rtpmt.network.packet.SensorMessage.SensorInformation.LocationInformation.getDefaultInstance();
        }

        public rtpmt.network.packet.SensorMessage.SensorInformation.LocationInformation build() {
          rtpmt.network.packet.SensorMessage.SensorInformation.LocationInformation result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public rtpmt.network.packet.SensorMessage.SensorInformation.LocationInformation buildPartial() {
          rtpmt.network.packet.SensorMessage.SensorInformation.LocationInformation result = new rtpmt.network.packet.SensorMessage.SensorInformation.LocationInformation(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.latitude_ = latitude_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.longitude_ = longitude_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof rtpmt.network.packet.SensorMessage.SensorInformation.LocationInformation) {
            return mergeFrom((rtpmt.network.packet.SensorMessage.SensorInformation.LocationInformation)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(rtpmt.network.packet.SensorMessage.SensorInformation.LocationInformation other) {
          if (other == rtpmt.network.packet.SensorMessage.SensorInformation.LocationInformation.getDefaultInstance()) return this;
          if (other.hasLatitude()) {
            setLatitude(other.getLatitude());
          }
          if (other.hasLongitude()) {
            setLongitude(other.getLongitude());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasLatitude()) {
            
            return false;
          }
          if (!hasLongitude()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          rtpmt.network.packet.SensorMessage.SensorInformation.LocationInformation parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (rtpmt.network.packet.SensorMessage.SensorInformation.LocationInformation) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // required double latitude = 1;
        private double latitude_ ;
        /**
         * <code>required double latitude = 1;</code>
         */
        public boolean hasLatitude() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required double latitude = 1;</code>
         */
        public double getLatitude() {
          return latitude_;
        }
        /**
         * <code>required double latitude = 1;</code>
         */
        public Builder setLatitude(double value) {
          bitField0_ |= 0x00000001;
          latitude_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required double latitude = 1;</code>
         */
        public Builder clearLatitude() {
          bitField0_ = (bitField0_ & ~0x00000001);
          latitude_ = 0D;
          onChanged();
          return this;
        }

        // required double longitude = 2;
        private double longitude_ ;
        /**
         * <code>required double longitude = 2;</code>
         */
        public boolean hasLongitude() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required double longitude = 2;</code>
         */
        public double getLongitude() {
          return longitude_;
        }
        /**
         * <code>required double longitude = 2;</code>
         */
        public Builder setLongitude(double value) {
          bitField0_ |= 0x00000002;
          longitude_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required double longitude = 2;</code>
         */
        public Builder clearLongitude() {
          bitField0_ = (bitField0_ & ~0x00000002);
          longitude_ = 0D;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:rtpmt.network.packet.SensorInformation.LocationInformation)
      }

      static {
        defaultInstance = new LocationInformation(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:rtpmt.network.packet.SensorInformation.LocationInformation)
    }

    public interface SensorOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // required string sensorId = 1;
      /**
       * <code>required string sensorId = 1;</code>
       */
      boolean hasSensorId();
      /**
       * <code>required string sensorId = 1;</code>
       */
      java.lang.String getSensorId();
      /**
       * <code>required string sensorId = 1;</code>
       */
      com.google.protobuf.ByteString
          getSensorIdBytes();

      // required .rtpmt.network.packet.SensorInformation.SensorType sensorType = 2 [default = TEMPERATURE];
      /**
       * <code>required .rtpmt.network.packet.SensorInformation.SensorType sensorType = 2 [default = TEMPERATURE];</code>
       */
      boolean hasSensorType();
      /**
       * <code>required .rtpmt.network.packet.SensorInformation.SensorType sensorType = 2 [default = TEMPERATURE];</code>
       */
      rtpmt.network.packet.SensorMessage.SensorInformation.SensorType getSensorType();

      // required string sensorValue = 3;
      /**
       * <code>required string sensorValue = 3;</code>
       */
      boolean hasSensorValue();
      /**
       * <code>required string sensorValue = 3;</code>
       */
      java.lang.String getSensorValue();
      /**
       * <code>required string sensorValue = 3;</code>
       */
      com.google.protobuf.ByteString
          getSensorValueBytes();

      // required string sensorUnit = 4;
      /**
       * <code>required string sensorUnit = 4;</code>
       */
      boolean hasSensorUnit();
      /**
       * <code>required string sensorUnit = 4;</code>
       */
      java.lang.String getSensorUnit();
      /**
       * <code>required string sensorUnit = 4;</code>
       */
      com.google.protobuf.ByteString
          getSensorUnitBytes();
    }
    /**
     * Protobuf type {@code rtpmt.network.packet.SensorInformation.Sensor}
     */
    public static final class Sensor extends
        com.google.protobuf.GeneratedMessage
        implements SensorOrBuilder {
      // Use Sensor.newBuilder() to construct.
      private Sensor(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Sensor(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Sensor defaultInstance;
      public static Sensor getDefaultInstance() {
        return defaultInstance;
      }

      public Sensor getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Sensor(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                bitField0_ |= 0x00000001;
                sensorId_ = input.readBytes();
                break;
              }
              case 16: {
                int rawValue = input.readEnum();
                rtpmt.network.packet.SensorMessage.SensorInformation.SensorType value = rtpmt.network.packet.SensorMessage.SensorInformation.SensorType.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(2, rawValue);
                } else {
                  bitField0_ |= 0x00000002;
                  sensorType_ = value;
                }
                break;
              }
              case 26: {
                bitField0_ |= 0x00000004;
                sensorValue_ = input.readBytes();
                break;
              }
              case 34: {
                bitField0_ |= 0x00000008;
                sensorUnit_ = input.readBytes();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return rtpmt.network.packet.SensorMessage.internal_static_rtpmt_network_packet_SensorInformation_Sensor_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return rtpmt.network.packet.SensorMessage.internal_static_rtpmt_network_packet_SensorInformation_Sensor_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                rtpmt.network.packet.SensorMessage.SensorInformation.Sensor.class, rtpmt.network.packet.SensorMessage.SensorInformation.Sensor.Builder.class);
      }

      public static com.google.protobuf.Parser<Sensor> PARSER =
          new com.google.protobuf.AbstractParser<Sensor>() {
        public Sensor parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Sensor(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Sensor> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // required string sensorId = 1;
      public static final int SENSORID_FIELD_NUMBER = 1;
      private java.lang.Object sensorId_;
      /**
       * <code>required string sensorId = 1;</code>
       */
      public boolean hasSensorId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string sensorId = 1;</code>
       */
      public java.lang.String getSensorId() {
        java.lang.Object ref = sensorId_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            sensorId_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string sensorId = 1;</code>
       */
      public com.google.protobuf.ByteString
          getSensorIdBytes() {
        java.lang.Object ref = sensorId_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sensorId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // required .rtpmt.network.packet.SensorInformation.SensorType sensorType = 2 [default = TEMPERATURE];
      public static final int SENSORTYPE_FIELD_NUMBER = 2;
      private rtpmt.network.packet.SensorMessage.SensorInformation.SensorType sensorType_;
      /**
       * <code>required .rtpmt.network.packet.SensorInformation.SensorType sensorType = 2 [default = TEMPERATURE];</code>
       */
      public boolean hasSensorType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .rtpmt.network.packet.SensorInformation.SensorType sensorType = 2 [default = TEMPERATURE];</code>
       */
      public rtpmt.network.packet.SensorMessage.SensorInformation.SensorType getSensorType() {
        return sensorType_;
      }

      // required string sensorValue = 3;
      public static final int SENSORVALUE_FIELD_NUMBER = 3;
      private java.lang.Object sensorValue_;
      /**
       * <code>required string sensorValue = 3;</code>
       */
      public boolean hasSensorValue() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string sensorValue = 3;</code>
       */
      public java.lang.String getSensorValue() {
        java.lang.Object ref = sensorValue_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            sensorValue_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string sensorValue = 3;</code>
       */
      public com.google.protobuf.ByteString
          getSensorValueBytes() {
        java.lang.Object ref = sensorValue_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sensorValue_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // required string sensorUnit = 4;
      public static final int SENSORUNIT_FIELD_NUMBER = 4;
      private java.lang.Object sensorUnit_;
      /**
       * <code>required string sensorUnit = 4;</code>
       */
      public boolean hasSensorUnit() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required string sensorUnit = 4;</code>
       */
      public java.lang.String getSensorUnit() {
        java.lang.Object ref = sensorUnit_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            sensorUnit_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string sensorUnit = 4;</code>
       */
      public com.google.protobuf.ByteString
          getSensorUnitBytes() {
        java.lang.Object ref = sensorUnit_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sensorUnit_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private void initFields() {
        sensorId_ = "";
        sensorType_ = rtpmt.network.packet.SensorMessage.SensorInformation.SensorType.TEMPERATURE;
        sensorValue_ = "";
        sensorUnit_ = "";
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasSensorId()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasSensorType()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasSensorValue()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasSensorUnit()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getSensorIdBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeEnum(2, sensorType_.getNumber());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeBytes(3, getSensorValueBytes());
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeBytes(4, getSensorUnitBytes());
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getSensorIdBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(2, sensorType_.getNumber());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(3, getSensorValueBytes());
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(4, getSensorUnitBytes());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static rtpmt.network.packet.SensorMessage.SensorInformation.Sensor parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static rtpmt.network.packet.SensorMessage.SensorInformation.Sensor parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static rtpmt.network.packet.SensorMessage.SensorInformation.Sensor parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static rtpmt.network.packet.SensorMessage.SensorInformation.Sensor parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static rtpmt.network.packet.SensorMessage.SensorInformation.Sensor parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static rtpmt.network.packet.SensorMessage.SensorInformation.Sensor parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static rtpmt.network.packet.SensorMessage.SensorInformation.Sensor parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static rtpmt.network.packet.SensorMessage.SensorInformation.Sensor parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static rtpmt.network.packet.SensorMessage.SensorInformation.Sensor parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static rtpmt.network.packet.SensorMessage.SensorInformation.Sensor parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(rtpmt.network.packet.SensorMessage.SensorInformation.Sensor prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code rtpmt.network.packet.SensorInformation.Sensor}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements rtpmt.network.packet.SensorMessage.SensorInformation.SensorOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return rtpmt.network.packet.SensorMessage.internal_static_rtpmt_network_packet_SensorInformation_Sensor_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return rtpmt.network.packet.SensorMessage.internal_static_rtpmt_network_packet_SensorInformation_Sensor_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  rtpmt.network.packet.SensorMessage.SensorInformation.Sensor.class, rtpmt.network.packet.SensorMessage.SensorInformation.Sensor.Builder.class);
        }

        // Construct using rtpmt.network.packet.SensorMessage.SensorInformation.Sensor.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          sensorId_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          sensorType_ = rtpmt.network.packet.SensorMessage.SensorInformation.SensorType.TEMPERATURE;
          bitField0_ = (bitField0_ & ~0x00000002);
          sensorValue_ = "";
          bitField0_ = (bitField0_ & ~0x00000004);
          sensorUnit_ = "";
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return rtpmt.network.packet.SensorMessage.internal_static_rtpmt_network_packet_SensorInformation_Sensor_descriptor;
        }

        public rtpmt.network.packet.SensorMessage.SensorInformation.Sensor getDefaultInstanceForType() {
          return rtpmt.network.packet.SensorMessage.SensorInformation.Sensor.getDefaultInstance();
        }

        public rtpmt.network.packet.SensorMessage.SensorInformation.Sensor build() {
          rtpmt.network.packet.SensorMessage.SensorInformation.Sensor result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public rtpmt.network.packet.SensorMessage.SensorInformation.Sensor buildPartial() {
          rtpmt.network.packet.SensorMessage.SensorInformation.Sensor result = new rtpmt.network.packet.SensorMessage.SensorInformation.Sensor(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.sensorId_ = sensorId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.sensorType_ = sensorType_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.sensorValue_ = sensorValue_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.sensorUnit_ = sensorUnit_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof rtpmt.network.packet.SensorMessage.SensorInformation.Sensor) {
            return mergeFrom((rtpmt.network.packet.SensorMessage.SensorInformation.Sensor)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(rtpmt.network.packet.SensorMessage.SensorInformation.Sensor other) {
          if (other == rtpmt.network.packet.SensorMessage.SensorInformation.Sensor.getDefaultInstance()) return this;
          if (other.hasSensorId()) {
            bitField0_ |= 0x00000001;
            sensorId_ = other.sensorId_;
            onChanged();
          }
          if (other.hasSensorType()) {
            setSensorType(other.getSensorType());
          }
          if (other.hasSensorValue()) {
            bitField0_ |= 0x00000004;
            sensorValue_ = other.sensorValue_;
            onChanged();
          }
          if (other.hasSensorUnit()) {
            bitField0_ |= 0x00000008;
            sensorUnit_ = other.sensorUnit_;
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasSensorId()) {
            
            return false;
          }
          if (!hasSensorType()) {
            
            return false;
          }
          if (!hasSensorValue()) {
            
            return false;
          }
          if (!hasSensorUnit()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          rtpmt.network.packet.SensorMessage.SensorInformation.Sensor parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (rtpmt.network.packet.SensorMessage.SensorInformation.Sensor) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // required string sensorId = 1;
        private java.lang.Object sensorId_ = "";
        /**
         * <code>required string sensorId = 1;</code>
         */
        public boolean hasSensorId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required string sensorId = 1;</code>
         */
        public java.lang.String getSensorId() {
          java.lang.Object ref = sensorId_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            sensorId_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string sensorId = 1;</code>
         */
        public com.google.protobuf.ByteString
            getSensorIdBytes() {
          java.lang.Object ref = sensorId_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            sensorId_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string sensorId = 1;</code>
         */
        public Builder setSensorId(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          sensorId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string sensorId = 1;</code>
         */
        public Builder clearSensorId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          sensorId_ = getDefaultInstance().getSensorId();
          onChanged();
          return this;
        }
        /**
         * <code>required string sensorId = 1;</code>
         */
        public Builder setSensorIdBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          sensorId_ = value;
          onChanged();
          return this;
        }

        // required .rtpmt.network.packet.SensorInformation.SensorType sensorType = 2 [default = TEMPERATURE];
        private rtpmt.network.packet.SensorMessage.SensorInformation.SensorType sensorType_ = rtpmt.network.packet.SensorMessage.SensorInformation.SensorType.TEMPERATURE;
        /**
         * <code>required .rtpmt.network.packet.SensorInformation.SensorType sensorType = 2 [default = TEMPERATURE];</code>
         */
        public boolean hasSensorType() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required .rtpmt.network.packet.SensorInformation.SensorType sensorType = 2 [default = TEMPERATURE];</code>
         */
        public rtpmt.network.packet.SensorMessage.SensorInformation.SensorType getSensorType() {
          return sensorType_;
        }
        /**
         * <code>required .rtpmt.network.packet.SensorInformation.SensorType sensorType = 2 [default = TEMPERATURE];</code>
         */
        public Builder setSensorType(rtpmt.network.packet.SensorMessage.SensorInformation.SensorType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000002;
          sensorType_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required .rtpmt.network.packet.SensorInformation.SensorType sensorType = 2 [default = TEMPERATURE];</code>
         */
        public Builder clearSensorType() {
          bitField0_ = (bitField0_ & ~0x00000002);
          sensorType_ = rtpmt.network.packet.SensorMessage.SensorInformation.SensorType.TEMPERATURE;
          onChanged();
          return this;
        }

        // required string sensorValue = 3;
        private java.lang.Object sensorValue_ = "";
        /**
         * <code>required string sensorValue = 3;</code>
         */
        public boolean hasSensorValue() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>required string sensorValue = 3;</code>
         */
        public java.lang.String getSensorValue() {
          java.lang.Object ref = sensorValue_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            sensorValue_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string sensorValue = 3;</code>
         */
        public com.google.protobuf.ByteString
            getSensorValueBytes() {
          java.lang.Object ref = sensorValue_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            sensorValue_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string sensorValue = 3;</code>
         */
        public Builder setSensorValue(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          sensorValue_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string sensorValue = 3;</code>
         */
        public Builder clearSensorValue() {
          bitField0_ = (bitField0_ & ~0x00000004);
          sensorValue_ = getDefaultInstance().getSensorValue();
          onChanged();
          return this;
        }
        /**
         * <code>required string sensorValue = 3;</code>
         */
        public Builder setSensorValueBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          sensorValue_ = value;
          onChanged();
          return this;
        }

        // required string sensorUnit = 4;
        private java.lang.Object sensorUnit_ = "";
        /**
         * <code>required string sensorUnit = 4;</code>
         */
        public boolean hasSensorUnit() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>required string sensorUnit = 4;</code>
         */
        public java.lang.String getSensorUnit() {
          java.lang.Object ref = sensorUnit_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            sensorUnit_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string sensorUnit = 4;</code>
         */
        public com.google.protobuf.ByteString
            getSensorUnitBytes() {
          java.lang.Object ref = sensorUnit_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            sensorUnit_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string sensorUnit = 4;</code>
         */
        public Builder setSensorUnit(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
          sensorUnit_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string sensorUnit = 4;</code>
         */
        public Builder clearSensorUnit() {
          bitField0_ = (bitField0_ & ~0x00000008);
          sensorUnit_ = getDefaultInstance().getSensorUnit();
          onChanged();
          return this;
        }
        /**
         * <code>required string sensorUnit = 4;</code>
         */
        public Builder setSensorUnitBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
          sensorUnit_ = value;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:rtpmt.network.packet.SensorInformation.Sensor)
      }

      static {
        defaultInstance = new Sensor(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:rtpmt.network.packet.SensorInformation.Sensor)
    }

    private int bitField0_;
    // required string deviceId = 1;
    public static final int DEVICEID_FIELD_NUMBER = 1;
    private java.lang.Object deviceId_;
    /**
     * <code>required string deviceId = 1;</code>
     */
    public boolean hasDeviceId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string deviceId = 1;</code>
     */
    public java.lang.String getDeviceId() {
      java.lang.Object ref = deviceId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          deviceId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string deviceId = 1;</code>
     */
    public com.google.protobuf.ByteString
        getDeviceIdBytes() {
      java.lang.Object ref = deviceId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        deviceId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string timeStamp = 2;
    public static final int TIMESTAMP_FIELD_NUMBER = 2;
    private java.lang.Object timeStamp_;
    /**
     * <code>required string timeStamp = 2;</code>
     */
    public boolean hasTimeStamp() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string timeStamp = 2;</code>
     */
    public java.lang.String getTimeStamp() {
      java.lang.Object ref = timeStamp_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          timeStamp_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string timeStamp = 2;</code>
     */
    public com.google.protobuf.ByteString
        getTimeStampBytes() {
      java.lang.Object ref = timeStamp_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        timeStamp_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required .rtpmt.network.packet.SensorInformation.LocationInformation location = 3;
    public static final int LOCATION_FIELD_NUMBER = 3;
    private rtpmt.network.packet.SensorMessage.SensorInformation.LocationInformation location_;
    /**
     * <code>required .rtpmt.network.packet.SensorInformation.LocationInformation location = 3;</code>
     */
    public boolean hasLocation() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .rtpmt.network.packet.SensorInformation.LocationInformation location = 3;</code>
     */
    public rtpmt.network.packet.SensorMessage.SensorInformation.LocationInformation getLocation() {
      return location_;
    }
    /**
     * <code>required .rtpmt.network.packet.SensorInformation.LocationInformation location = 3;</code>
     */
    public rtpmt.network.packet.SensorMessage.SensorInformation.LocationInformationOrBuilder getLocationOrBuilder() {
      return location_;
    }

    // repeated .rtpmt.network.packet.SensorInformation.Sensor sensors = 4;
    public static final int SENSORS_FIELD_NUMBER = 4;
    private java.util.List<rtpmt.network.packet.SensorMessage.SensorInformation.Sensor> sensors_;
    /**
     * <code>repeated .rtpmt.network.packet.SensorInformation.Sensor sensors = 4;</code>
     */
    public java.util.List<rtpmt.network.packet.SensorMessage.SensorInformation.Sensor> getSensorsList() {
      return sensors_;
    }
    /**
     * <code>repeated .rtpmt.network.packet.SensorInformation.Sensor sensors = 4;</code>
     */
    public java.util.List<? extends rtpmt.network.packet.SensorMessage.SensorInformation.SensorOrBuilder> 
        getSensorsOrBuilderList() {
      return sensors_;
    }
    /**
     * <code>repeated .rtpmt.network.packet.SensorInformation.Sensor sensors = 4;</code>
     */
    public int getSensorsCount() {
      return sensors_.size();
    }
    /**
     * <code>repeated .rtpmt.network.packet.SensorInformation.Sensor sensors = 4;</code>
     */
    public rtpmt.network.packet.SensorMessage.SensorInformation.Sensor getSensors(int index) {
      return sensors_.get(index);
    }
    /**
     * <code>repeated .rtpmt.network.packet.SensorInformation.Sensor sensors = 4;</code>
     */
    public rtpmt.network.packet.SensorMessage.SensorInformation.SensorOrBuilder getSensorsOrBuilder(
        int index) {
      return sensors_.get(index);
    }

    private void initFields() {
      deviceId_ = "";
      timeStamp_ = "";
      location_ = rtpmt.network.packet.SensorMessage.SensorInformation.LocationInformation.getDefaultInstance();
      sensors_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasDeviceId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTimeStamp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLocation()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getLocation().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getSensorsCount(); i++) {
        if (!getSensors(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getDeviceIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getTimeStampBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, location_);
      }
      for (int i = 0; i < sensors_.size(); i++) {
        output.writeMessage(4, sensors_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getDeviceIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getTimeStampBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, location_);
      }
      for (int i = 0; i < sensors_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, sensors_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static rtpmt.network.packet.SensorMessage.SensorInformation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rtpmt.network.packet.SensorMessage.SensorInformation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rtpmt.network.packet.SensorMessage.SensorInformation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rtpmt.network.packet.SensorMessage.SensorInformation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rtpmt.network.packet.SensorMessage.SensorInformation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static rtpmt.network.packet.SensorMessage.SensorInformation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static rtpmt.network.packet.SensorMessage.SensorInformation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static rtpmt.network.packet.SensorMessage.SensorInformation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static rtpmt.network.packet.SensorMessage.SensorInformation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static rtpmt.network.packet.SensorMessage.SensorInformation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(rtpmt.network.packet.SensorMessage.SensorInformation prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code rtpmt.network.packet.SensorInformation}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements rtpmt.network.packet.SensorMessage.SensorInformationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return rtpmt.network.packet.SensorMessage.internal_static_rtpmt_network_packet_SensorInformation_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return rtpmt.network.packet.SensorMessage.internal_static_rtpmt_network_packet_SensorInformation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                rtpmt.network.packet.SensorMessage.SensorInformation.class, rtpmt.network.packet.SensorMessage.SensorInformation.Builder.class);
      }

      // Construct using rtpmt.network.packet.SensorMessage.SensorInformation.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getLocationFieldBuilder();
          getSensorsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        deviceId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        timeStamp_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        if (locationBuilder_ == null) {
          location_ = rtpmt.network.packet.SensorMessage.SensorInformation.LocationInformation.getDefaultInstance();
        } else {
          locationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (sensorsBuilder_ == null) {
          sensors_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          sensorsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return rtpmt.network.packet.SensorMessage.internal_static_rtpmt_network_packet_SensorInformation_descriptor;
      }

      public rtpmt.network.packet.SensorMessage.SensorInformation getDefaultInstanceForType() {
        return rtpmt.network.packet.SensorMessage.SensorInformation.getDefaultInstance();
      }

      public rtpmt.network.packet.SensorMessage.SensorInformation build() {
        rtpmt.network.packet.SensorMessage.SensorInformation result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public rtpmt.network.packet.SensorMessage.SensorInformation buildPartial() {
        rtpmt.network.packet.SensorMessage.SensorInformation result = new rtpmt.network.packet.SensorMessage.SensorInformation(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.deviceId_ = deviceId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.timeStamp_ = timeStamp_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (locationBuilder_ == null) {
          result.location_ = location_;
        } else {
          result.location_ = locationBuilder_.build();
        }
        if (sensorsBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            sensors_ = java.util.Collections.unmodifiableList(sensors_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.sensors_ = sensors_;
        } else {
          result.sensors_ = sensorsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof rtpmt.network.packet.SensorMessage.SensorInformation) {
          return mergeFrom((rtpmt.network.packet.SensorMessage.SensorInformation)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(rtpmt.network.packet.SensorMessage.SensorInformation other) {
        if (other == rtpmt.network.packet.SensorMessage.SensorInformation.getDefaultInstance()) return this;
        if (other.hasDeviceId()) {
          bitField0_ |= 0x00000001;
          deviceId_ = other.deviceId_;
          onChanged();
        }
        if (other.hasTimeStamp()) {
          bitField0_ |= 0x00000002;
          timeStamp_ = other.timeStamp_;
          onChanged();
        }
        if (other.hasLocation()) {
          mergeLocation(other.getLocation());
        }
        if (sensorsBuilder_ == null) {
          if (!other.sensors_.isEmpty()) {
            if (sensors_.isEmpty()) {
              sensors_ = other.sensors_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureSensorsIsMutable();
              sensors_.addAll(other.sensors_);
            }
            onChanged();
          }
        } else {
          if (!other.sensors_.isEmpty()) {
            if (sensorsBuilder_.isEmpty()) {
              sensorsBuilder_.dispose();
              sensorsBuilder_ = null;
              sensors_ = other.sensors_;
              bitField0_ = (bitField0_ & ~0x00000008);
              sensorsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSensorsFieldBuilder() : null;
            } else {
              sensorsBuilder_.addAllMessages(other.sensors_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasDeviceId()) {
          
          return false;
        }
        if (!hasTimeStamp()) {
          
          return false;
        }
        if (!hasLocation()) {
          
          return false;
        }
        if (!getLocation().isInitialized()) {
          
          return false;
        }
        for (int i = 0; i < getSensorsCount(); i++) {
          if (!getSensors(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        rtpmt.network.packet.SensorMessage.SensorInformation parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (rtpmt.network.packet.SensorMessage.SensorInformation) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string deviceId = 1;
      private java.lang.Object deviceId_ = "";
      /**
       * <code>required string deviceId = 1;</code>
       */
      public boolean hasDeviceId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string deviceId = 1;</code>
       */
      public java.lang.String getDeviceId() {
        java.lang.Object ref = deviceId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          deviceId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string deviceId = 1;</code>
       */
      public com.google.protobuf.ByteString
          getDeviceIdBytes() {
        java.lang.Object ref = deviceId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          deviceId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string deviceId = 1;</code>
       */
      public Builder setDeviceId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        deviceId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string deviceId = 1;</code>
       */
      public Builder clearDeviceId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        deviceId_ = getDefaultInstance().getDeviceId();
        onChanged();
        return this;
      }
      /**
       * <code>required string deviceId = 1;</code>
       */
      public Builder setDeviceIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        deviceId_ = value;
        onChanged();
        return this;
      }

      // required string timeStamp = 2;
      private java.lang.Object timeStamp_ = "";
      /**
       * <code>required string timeStamp = 2;</code>
       */
      public boolean hasTimeStamp() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string timeStamp = 2;</code>
       */
      public java.lang.String getTimeStamp() {
        java.lang.Object ref = timeStamp_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          timeStamp_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string timeStamp = 2;</code>
       */
      public com.google.protobuf.ByteString
          getTimeStampBytes() {
        java.lang.Object ref = timeStamp_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          timeStamp_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string timeStamp = 2;</code>
       */
      public Builder setTimeStamp(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        timeStamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string timeStamp = 2;</code>
       */
      public Builder clearTimeStamp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        timeStamp_ = getDefaultInstance().getTimeStamp();
        onChanged();
        return this;
      }
      /**
       * <code>required string timeStamp = 2;</code>
       */
      public Builder setTimeStampBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        timeStamp_ = value;
        onChanged();
        return this;
      }

      // required .rtpmt.network.packet.SensorInformation.LocationInformation location = 3;
      private rtpmt.network.packet.SensorMessage.SensorInformation.LocationInformation location_ = rtpmt.network.packet.SensorMessage.SensorInformation.LocationInformation.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          rtpmt.network.packet.SensorMessage.SensorInformation.LocationInformation, rtpmt.network.packet.SensorMessage.SensorInformation.LocationInformation.Builder, rtpmt.network.packet.SensorMessage.SensorInformation.LocationInformationOrBuilder> locationBuilder_;
      /**
       * <code>required .rtpmt.network.packet.SensorInformation.LocationInformation location = 3;</code>
       */
      public boolean hasLocation() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .rtpmt.network.packet.SensorInformation.LocationInformation location = 3;</code>
       */
      public rtpmt.network.packet.SensorMessage.SensorInformation.LocationInformation getLocation() {
        if (locationBuilder_ == null) {
          return location_;
        } else {
          return locationBuilder_.getMessage();
        }
      }
      /**
       * <code>required .rtpmt.network.packet.SensorInformation.LocationInformation location = 3;</code>
       */
      public Builder setLocation(rtpmt.network.packet.SensorMessage.SensorInformation.LocationInformation value) {
        if (locationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          location_ = value;
          onChanged();
        } else {
          locationBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .rtpmt.network.packet.SensorInformation.LocationInformation location = 3;</code>
       */
      public Builder setLocation(
          rtpmt.network.packet.SensorMessage.SensorInformation.LocationInformation.Builder builderForValue) {
        if (locationBuilder_ == null) {
          location_ = builderForValue.build();
          onChanged();
        } else {
          locationBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .rtpmt.network.packet.SensorInformation.LocationInformation location = 3;</code>
       */
      public Builder mergeLocation(rtpmt.network.packet.SensorMessage.SensorInformation.LocationInformation value) {
        if (locationBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              location_ != rtpmt.network.packet.SensorMessage.SensorInformation.LocationInformation.getDefaultInstance()) {
            location_ =
              rtpmt.network.packet.SensorMessage.SensorInformation.LocationInformation.newBuilder(location_).mergeFrom(value).buildPartial();
          } else {
            location_ = value;
          }
          onChanged();
        } else {
          locationBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .rtpmt.network.packet.SensorInformation.LocationInformation location = 3;</code>
       */
      public Builder clearLocation() {
        if (locationBuilder_ == null) {
          location_ = rtpmt.network.packet.SensorMessage.SensorInformation.LocationInformation.getDefaultInstance();
          onChanged();
        } else {
          locationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>required .rtpmt.network.packet.SensorInformation.LocationInformation location = 3;</code>
       */
      public rtpmt.network.packet.SensorMessage.SensorInformation.LocationInformation.Builder getLocationBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getLocationFieldBuilder().getBuilder();
      }
      /**
       * <code>required .rtpmt.network.packet.SensorInformation.LocationInformation location = 3;</code>
       */
      public rtpmt.network.packet.SensorMessage.SensorInformation.LocationInformationOrBuilder getLocationOrBuilder() {
        if (locationBuilder_ != null) {
          return locationBuilder_.getMessageOrBuilder();
        } else {
          return location_;
        }
      }
      /**
       * <code>required .rtpmt.network.packet.SensorInformation.LocationInformation location = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          rtpmt.network.packet.SensorMessage.SensorInformation.LocationInformation, rtpmt.network.packet.SensorMessage.SensorInformation.LocationInformation.Builder, rtpmt.network.packet.SensorMessage.SensorInformation.LocationInformationOrBuilder> 
          getLocationFieldBuilder() {
        if (locationBuilder_ == null) {
          locationBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              rtpmt.network.packet.SensorMessage.SensorInformation.LocationInformation, rtpmt.network.packet.SensorMessage.SensorInformation.LocationInformation.Builder, rtpmt.network.packet.SensorMessage.SensorInformation.LocationInformationOrBuilder>(
                  location_,
                  getParentForChildren(),
                  isClean());
          location_ = null;
        }
        return locationBuilder_;
      }

      // repeated .rtpmt.network.packet.SensorInformation.Sensor sensors = 4;
      private java.util.List<rtpmt.network.packet.SensorMessage.SensorInformation.Sensor> sensors_ =
        java.util.Collections.emptyList();
      private void ensureSensorsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          sensors_ = new java.util.ArrayList<rtpmt.network.packet.SensorMessage.SensorInformation.Sensor>(sensors_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          rtpmt.network.packet.SensorMessage.SensorInformation.Sensor, rtpmt.network.packet.SensorMessage.SensorInformation.Sensor.Builder, rtpmt.network.packet.SensorMessage.SensorInformation.SensorOrBuilder> sensorsBuilder_;

      /**
       * <code>repeated .rtpmt.network.packet.SensorInformation.Sensor sensors = 4;</code>
       */
      public java.util.List<rtpmt.network.packet.SensorMessage.SensorInformation.Sensor> getSensorsList() {
        if (sensorsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(sensors_);
        } else {
          return sensorsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .rtpmt.network.packet.SensorInformation.Sensor sensors = 4;</code>
       */
      public int getSensorsCount() {
        if (sensorsBuilder_ == null) {
          return sensors_.size();
        } else {
          return sensorsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .rtpmt.network.packet.SensorInformation.Sensor sensors = 4;</code>
       */
      public rtpmt.network.packet.SensorMessage.SensorInformation.Sensor getSensors(int index) {
        if (sensorsBuilder_ == null) {
          return sensors_.get(index);
        } else {
          return sensorsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .rtpmt.network.packet.SensorInformation.Sensor sensors = 4;</code>
       */
      public Builder setSensors(
          int index, rtpmt.network.packet.SensorMessage.SensorInformation.Sensor value) {
        if (sensorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSensorsIsMutable();
          sensors_.set(index, value);
          onChanged();
        } else {
          sensorsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .rtpmt.network.packet.SensorInformation.Sensor sensors = 4;</code>
       */
      public Builder setSensors(
          int index, rtpmt.network.packet.SensorMessage.SensorInformation.Sensor.Builder builderForValue) {
        if (sensorsBuilder_ == null) {
          ensureSensorsIsMutable();
          sensors_.set(index, builderForValue.build());
          onChanged();
        } else {
          sensorsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .rtpmt.network.packet.SensorInformation.Sensor sensors = 4;</code>
       */
      public Builder addSensors(rtpmt.network.packet.SensorMessage.SensorInformation.Sensor value) {
        if (sensorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSensorsIsMutable();
          sensors_.add(value);
          onChanged();
        } else {
          sensorsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .rtpmt.network.packet.SensorInformation.Sensor sensors = 4;</code>
       */
      public Builder addSensors(
          int index, rtpmt.network.packet.SensorMessage.SensorInformation.Sensor value) {
        if (sensorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSensorsIsMutable();
          sensors_.add(index, value);
          onChanged();
        } else {
          sensorsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .rtpmt.network.packet.SensorInformation.Sensor sensors = 4;</code>
       */
      public Builder addSensors(
          rtpmt.network.packet.SensorMessage.SensorInformation.Sensor.Builder builderForValue) {
        if (sensorsBuilder_ == null) {
          ensureSensorsIsMutable();
          sensors_.add(builderForValue.build());
          onChanged();
        } else {
          sensorsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .rtpmt.network.packet.SensorInformation.Sensor sensors = 4;</code>
       */
      public Builder addSensors(
          int index, rtpmt.network.packet.SensorMessage.SensorInformation.Sensor.Builder builderForValue) {
        if (sensorsBuilder_ == null) {
          ensureSensorsIsMutable();
          sensors_.add(index, builderForValue.build());
          onChanged();
        } else {
          sensorsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .rtpmt.network.packet.SensorInformation.Sensor sensors = 4;</code>
       */
      public Builder addAllSensors(
          java.lang.Iterable<? extends rtpmt.network.packet.SensorMessage.SensorInformation.Sensor> values) {
        if (sensorsBuilder_ == null) {
          ensureSensorsIsMutable();
          super.addAll(values, sensors_);
          onChanged();
        } else {
          sensorsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .rtpmt.network.packet.SensorInformation.Sensor sensors = 4;</code>
       */
      public Builder clearSensors() {
        if (sensorsBuilder_ == null) {
          sensors_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          sensorsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .rtpmt.network.packet.SensorInformation.Sensor sensors = 4;</code>
       */
      public Builder removeSensors(int index) {
        if (sensorsBuilder_ == null) {
          ensureSensorsIsMutable();
          sensors_.remove(index);
          onChanged();
        } else {
          sensorsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .rtpmt.network.packet.SensorInformation.Sensor sensors = 4;</code>
       */
      public rtpmt.network.packet.SensorMessage.SensorInformation.Sensor.Builder getSensorsBuilder(
          int index) {
        return getSensorsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .rtpmt.network.packet.SensorInformation.Sensor sensors = 4;</code>
       */
      public rtpmt.network.packet.SensorMessage.SensorInformation.SensorOrBuilder getSensorsOrBuilder(
          int index) {
        if (sensorsBuilder_ == null) {
          return sensors_.get(index);  } else {
          return sensorsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .rtpmt.network.packet.SensorInformation.Sensor sensors = 4;</code>
       */
      public java.util.List<? extends rtpmt.network.packet.SensorMessage.SensorInformation.SensorOrBuilder> 
           getSensorsOrBuilderList() {
        if (sensorsBuilder_ != null) {
          return sensorsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(sensors_);
        }
      }
      /**
       * <code>repeated .rtpmt.network.packet.SensorInformation.Sensor sensors = 4;</code>
       */
      public rtpmt.network.packet.SensorMessage.SensorInformation.Sensor.Builder addSensorsBuilder() {
        return getSensorsFieldBuilder().addBuilder(
            rtpmt.network.packet.SensorMessage.SensorInformation.Sensor.getDefaultInstance());
      }
      /**
       * <code>repeated .rtpmt.network.packet.SensorInformation.Sensor sensors = 4;</code>
       */
      public rtpmt.network.packet.SensorMessage.SensorInformation.Sensor.Builder addSensorsBuilder(
          int index) {
        return getSensorsFieldBuilder().addBuilder(
            index, rtpmt.network.packet.SensorMessage.SensorInformation.Sensor.getDefaultInstance());
      }
      /**
       * <code>repeated .rtpmt.network.packet.SensorInformation.Sensor sensors = 4;</code>
       */
      public java.util.List<rtpmt.network.packet.SensorMessage.SensorInformation.Sensor.Builder> 
           getSensorsBuilderList() {
        return getSensorsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          rtpmt.network.packet.SensorMessage.SensorInformation.Sensor, rtpmt.network.packet.SensorMessage.SensorInformation.Sensor.Builder, rtpmt.network.packet.SensorMessage.SensorInformation.SensorOrBuilder> 
          getSensorsFieldBuilder() {
        if (sensorsBuilder_ == null) {
          sensorsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              rtpmt.network.packet.SensorMessage.SensorInformation.Sensor, rtpmt.network.packet.SensorMessage.SensorInformation.Sensor.Builder, rtpmt.network.packet.SensorMessage.SensorInformation.SensorOrBuilder>(
                  sensors_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          sensors_ = null;
        }
        return sensorsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:rtpmt.network.packet.SensorInformation)
    }

    static {
      defaultInstance = new SensorInformation(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:rtpmt.network.packet.SensorInformation)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_rtpmt_network_packet_SensorInformation_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_rtpmt_network_packet_SensorInformation_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_rtpmt_network_packet_SensorInformation_LocationInformation_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_rtpmt_network_packet_SensorInformation_LocationInformation_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_rtpmt_network_packet_SensorInformation_Sensor_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_rtpmt_network_packet_SensorInformation_Sensor_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\027SensorInformation.proto\022\024rtpmt.network" +
      ".packet\"\346\003\n\021SensorInformation\022\020\n\010deviceI" +
      "d\030\001 \002(\t\022\021\n\ttimeStamp\030\002 \002(\t\022M\n\010location\030\003" +
      " \002(\0132;.rtpmt.network.packet.SensorInform" +
      "ation.LocationInformation\022?\n\007sensors\030\004 \003" +
      "(\0132..rtpmt.network.packet.SensorInformat" +
      "ion.Sensor\032:\n\023LocationInformation\022\020\n\010lat" +
      "itude\030\001 \002(\001\022\021\n\tlongitude\030\002 \002(\001\032\230\001\n\006Senso" +
      "r\022\020\n\010sensorId\030\001 \002(\t\022S\n\nsensorType\030\002 \002(\0162" +
      "2.rtpmt.network.packet.SensorInformation",
      ".SensorType:\013TEMPERATURE\022\023\n\013sensorValue\030" +
      "\003 \002(\t\022\022\n\nsensorUnit\030\004 \002(\t\"E\n\nSensorType\022" +
      "\017\n\013TEMPERATURE\020\000\022\r\n\tVIBRATION\020\001\022\014\n\010HUMID" +
      "ITY\020\002\022\t\n\005SHOCK\020\003B%\n\024rtpmt.network.packet" +
      "B\rSensorMessage"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_rtpmt_network_packet_SensorInformation_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_rtpmt_network_packet_SensorInformation_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_rtpmt_network_packet_SensorInformation_descriptor,
              new java.lang.String[] { "DeviceId", "TimeStamp", "Location", "Sensors", });
          internal_static_rtpmt_network_packet_SensorInformation_LocationInformation_descriptor =
            internal_static_rtpmt_network_packet_SensorInformation_descriptor.getNestedTypes().get(0);
          internal_static_rtpmt_network_packet_SensorInformation_LocationInformation_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_rtpmt_network_packet_SensorInformation_LocationInformation_descriptor,
              new java.lang.String[] { "Latitude", "Longitude", });
          internal_static_rtpmt_network_packet_SensorInformation_Sensor_descriptor =
            internal_static_rtpmt_network_packet_SensorInformation_descriptor.getNestedTypes().get(1);
          internal_static_rtpmt_network_packet_SensorInformation_Sensor_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_rtpmt_network_packet_SensorInformation_Sensor_descriptor,
              new java.lang.String[] { "SensorId", "SensorType", "SensorValue", "SensorUnit", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
